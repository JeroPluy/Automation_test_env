description: >-
  This automation is a converted blueprint automation to setup a light dection automation.
  Its is complex and has a lot of conditions and triggers to test on.
trigger:
  - platform: state
    id: t0
    entity_id:
      - binary_sensor.moving_living_room
    from: "off"
    to: "on"
  - platform: numeric_state
    id: t1
    entity_id: sun.sun
    attribute: elevation
    below: -1.5
  - platform: numeric_state
    id: t2
    entity_id: sensor.light_living_room
    below: 20
  - platform: time
    id: t3
    at: "00:00:00"
  - platform: time
    id: t5
    at: "00:00:00"
  - platform: numeric_state
    id: t6
    entity_id: sun.sun
    attribute: elevation
    below: -1.5
  - platform: numeric_state
    id: t9
    entity_id: sun.sun
    attribute: elevation
    above: -4
  - platform: numeric_state
    id: t10
    entity_id: sensor.light_living_room
    above: 80
  - platform: time
    id: t11
    at: "00:00:00"
  - platform: time
    id: t13
    at: "00:00:00"
  - platform: numeric_state
    id: t14
    entity_id: sun.sun
    attribute: elevation
    above: -4
  - platform: homeassistant
    id: t15
    event: start
condition:
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id:
              - binary_sensor.moving_living_room
            match: any
            state: "on"
          - condition: trigger
            id: t0
      - condition: and
        conditions:
          - condition: state
            entity_id:
              - binary_sensor.moving_living_room
            state: "on"
            match: any
          - condition: template
            value_template: "{{ include_sun == 'sun_enabled' }}"
          - condition: trigger
            id: t1
      - condition: and
        conditions:
          - condition: state
            entity_id:
              - binary_sensor.moving_living_room
            state: "on"
            match: any
          - condition: template
            value_template: "{{ include_ambient == 'ambient_enabled' }}"
          - condition: trigger
            id: t2
      - condition: and
        conditions:
          - condition: state
            entity_id:
              - binary_sensor.moving_living_room
            state: "on"
            match: any
          - condition: template
            value_template: "{{ include_time == 'time_enabled' }}"
          - condition: trigger
            id: t3
      - condition: and
        conditions:
          - condition: trigger
            id: t4
          - condition: template
            value_template: "{{ include_night_lights == 'night_lights_enabled' }}"
          - condition: template
            value_template: "{{ 'entity_state_enabled' in night_lights_conditions }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ 'manage_scripts_crossing_over' in
                  include_night_light_control }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t5
          - condition: template
            value_template: "{{ include_night_lights == 'night_lights_enabled' }}"
          - condition: template
            value_template: "{{ 'time_enabled' in night_lights_conditions }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ 'manage_scripts_crossing_over' in
                  include_night_light_control }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t6
          - condition: template
            value_template: "{{ include_night_lights == 'night_lights_enabled' }}"
          - condition: template
            value_template: "{{ 'sun_enabled' in night_lights_conditions }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ 'manage_scripts_crossing_over' in
                  include_night_light_control }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t7_on
          - condition: template
            value_template: "{{ 'bypass_enabled_turn_on' in include_bypass }}"
      - condition: and
        conditions:
          - condition: trigger
            id: t7_off
          - condition: template
            value_template: "{{ 'bypass_enabled_turn_off' in include_bypass }}"
      - condition: and
        conditions:
          - condition: trigger
            id: t7_stop
          - condition: template
            value_template: "{{ 'bypass_enabled_stop' in include_bypass }}"
      - condition: and
        conditions:
          - condition: trigger
            id: t8_on
          - condition: template
            value_template: "{{ 'bypass_enabled_turn_on' in include_bypass }}"
      - condition: and
        conditions:
          - condition: trigger
            id: t8_off
          - condition: template
            value_template: "{{ 'bypass_enabled_turn_off' in  include_bypass }}"
      - condition: and
        conditions:
          - condition: trigger
            id: t8_stop
          - condition: template
            value_template: "{{ 'bypass_enabled_stop' in include_bypass }}"
      - condition: and
        conditions:
          - condition: trigger
            id: t9
          - condition: template
            value_template: "{{ include_sun == 'sun_enabled' }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t10
          - condition: template
            value_template: "{{ include_ambient == 'ambient_enabled' }}"
          - condition: template
            value_template: "{{ ambient_light_options == 'ambient_light_option_disabled' }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t11
          - condition: template
            value_template: "{{ include_time == 'time_enabled' }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t12
          - condition: template
            value_template: "{{ include_night_lights == 'night_lights_enabled' }}"
          - condition: template
            value_template: "{{ 'entity_state_enabled' in night_lights_conditions }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ 'manage_scripts_crossing_over' in
                  include_night_light_control }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t13
          - condition: template
            value_template: "{{ include_night_lights == 'night_lights_enabled' }}"
          - condition: template
            value_template: "{{ 'time_enabled' in night_lights_conditions }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ 'manage_scripts_crossing_over' in
                  include_night_light_control }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t14
          - condition: template
            value_template: "{{ include_night_lights == 'night_lights_enabled' }}"
          - condition: template
            value_template: "{{ 'sun_enabled' in night_lights_conditions }}"
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ 'manage_scripts_crossing_over' in
                  include_night_light_control }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: trigger
            id: t15
          - condition: or
            conditions:
              - condition: template
                value_template: >-
                  {{ (expand(light_switch.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: >-
                  {{ (include_night_lights == 'night_lights_enabled') and
                  (expand(night_lights.entity_id) | selectattr('state', '==',
                  'on') | list | count > 0) }}
              - condition: template
                value_template: |-
                  {% if boolean_scenes_scripts != [] %}
                    {{ is_state(boolean_scenes_scripts, 'on') }}
                  {% endif %}
              - condition: template
                value_template: |-
                  {% if night_boolean_scenes_scripts != [] %}
                    {{ is_state(night_boolean_scenes_scripts, 'on') }}
                  {% endif %}
      - condition: and
        conditions:
          - condition: state
            entity_id:
              - binary_sensor.moving_living_room
            match: any
            state: "on"
          - condition: trigger
            id: t15
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_auto_off_enabled_on' in include_bypass_auto_off) or
              ('bypass_auto_off_enabled_off' in include_bypass_auto_off) or
              ('bypass_auto_off_enabled_stop' in include_bypass_auto_off) }}
          - condition: trigger
            id: t15
          - condition: or
            conditions:
              - condition: state
                entity_id: []
                match: any
                state: "on"
              - condition: state
                entity_id: []
                match: any
                state: "on"
              - condition: state
                entity_id: []
                match: any
                state: "on"
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ include_bypass == [] }}"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' in include_bypass) and
              ('bypass_enabled_turn_off' in include_bypass) and
              ('bypass_enabled_stop' not in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
          - condition: state
            entity_id: []
            state: "off"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' in include_bypass) and
              ('bypass_enabled_turn_off' not in include_bypass) and
              ('bypass_enabled_stop' in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
          - condition: state
            entity_id: []
            state: "off"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' not in include_bypass) and
              ('bypass_enabled_turn_off' in include_bypass) and
              ('bypass_enabled_stop' in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
          - condition: state
            entity_id: []
            state: "off"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' in include_bypass) and
              ('bypass_enabled_turn_off' not in include_bypass) and
              ('bypass_enabled_stop' not in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' not in include_bypass) and
              ('bypass_enabled_turn_off' in include_bypass) and
              ('bypass_enabled_stop' not in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' not in include_bypass) and
              ('bypass_enabled_turn_off' not in include_bypass) and
              ('bypass_enabled_stop' in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ ('bypass_enabled_turn_on' not in include_bypass) and
              ('bypass_enabled_turn_off' not in include_bypass) and
              ('bypass_enabled_stop' in include_bypass) }}
          - condition: state
            entity_id: []
            state: "off"
      - condition: trigger
        id:
          - t7_on
          - t7_off
          - t7_stop
          - t8_on
          - t8_off
          - t8_stop
          - t15
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ include_sun == 'sun_disabled' }}"
      - condition: template
        value_template: "{{ include_sun == 'sun_enabled_night_lights' }}"
      - condition: template
        value_template: >-
          {{ (include_sun == 'sun_enabled') and (is_state_attr('sun.sun',
          'rising', false)) and (state_attr('sun.sun','elevation') <=
          sun_elevation | float(90)) }}
      - condition: template
        value_template: >-
          {{ (include_sun == 'sun_enabled') and (is_state_attr('sun.sun',
          'rising', true)) and (state_attr('sun.sun','elevation') <=
          sun_elevation_rising | float(90)) }}
      - condition: trigger
        id:
          - t7_on
          - t7_off
          - t7_stop
          - t8_on
          - t8_off
          - t8_stop
          - t9
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and
              (states[ambient_light_sensor].state | int <
              ambient_light_high_value | int) }}
          - condition: template
            value_template: |-
              {% if boolean_scenes_scripts != [] %}
                {{ is_state(boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and
              (states[ambient_light_sensor].state | int <
              ambient_light_high_value | int) }}
          - condition: template
            value_template: |-
              {% if night_boolean_scenes_scripts != [] %}
                {{ is_state(night_boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and (
              ambient_light_options == 'ambient_light_option_enabled' ) }}
          - condition: template
            value_template: |-
              {% if boolean_scenes_scripts != [] %}
                {{ is_state(boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and (
              ambient_light_options == 'ambient_light_option_enabled' ) }}
          - condition: template
            value_template: |-
              {% if night_boolean_scenes_scripts != [] %}
                {{ is_state(night_boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: template
        value_template: >-
          {{ (include_ambient == 'ambient_enabled') and
          (states[ambient_light_sensor].state | int < ambient_light_high_value |
          int) and ((include_night_lights == 'night_lights_enabled') and
          (expand(night_lights.entity_id) | selectattr('state', '==', 'on') |
          list | count > 0)) }}
      - condition: template
        value_template: >-
          {{ (include_ambient == 'ambient_enabled') and (ambient_light_options
          == 'ambient_light_option_enabled') and (expand(light_switch.entity_id)
          | selectattr('state', '==', 'on') | list | count > 0) }}
      - condition: template
        value_template: >-
          {{ (include_ambient == 'ambient_enabled') and (ambient_light_options
          == 'ambient_light_option_enabled') and ((include_night_lights ==
          'night_lights_enabled') and (expand(night_lights.entity_id) |
          selectattr('state', '==', 'on') | list | count > 0)) }}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and
              (states[ambient_light_sensor].state | int <
              ambient_light_high_value | int) }}
          - condition: template
            value_template: |-
              {% if boolean_scenes_scripts != [] %}
                {{ is_state(boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and
              (states[ambient_light_sensor].state | int <
              ambient_light_high_value | int) }}
          - condition: template
            value_template: |-
              {% if night_boolean_scenes_scripts != [] %}
                {{ is_state(night_boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and (
              ambient_light_options == 'ambient_light_option_enabled' ) }}
          - condition: template
            value_template: |-
              {% if boolean_scenes_scripts != [] %}
                {{ is_state(boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (include_ambient == 'ambient_enabled') and (
              ambient_light_options == 'ambient_light_option_enabled' ) }}
          - condition: template
            value_template: |-
              {% if night_boolean_scenes_scripts != [] %}
                {{ is_state(night_boolean_scenes_scripts, 'on') }}
              {% endif %}
      - condition: trigger
        id:
          - t7_on
          - t7_off
          - t7_stop
          - t8_on
          - t8_off
          - t8_stop
          - t10
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: time
            after: "00:00:00"
            before: "00:00:00"
            weekday:
              - mon
              - tue
              - wed
              - thu
              - fri
              - sat
              - sun
          - condition: template
            value_template: "{{ include_time == 'time_enabled' }}"
      - condition: and
        conditions:
          - condition: time
            after: "00:00:00"
            before: "00:00:00"
            weekday:
              - mon
              - tue
              - wed
              - thu
              - fri
              - sat
              - sun
          - condition: template
            value_template: "{{ include_time == 'time_enabled' }}"
      - condition: trigger
        id:
          - t7_on
          - t7_off
          - t7_stop
          - t8_on
          - t8_off
          - t8_stop
          - t11
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: numeric_state
            entity_id: []
            above: 0
          - condition: template
            value_template: "{{ include_device_tracker == 'zone_enabled' }}"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (state_attr(zone, 'persons') + people) | count !=
              dict.fromkeys(state_attr(zone, 'persons') + people) | count }}
          - condition: template
            value_template: "{{ include_device_tracker == 'zone_people_enabled' }}"
      - condition: and
        conditions:
          - condition: template
            value_template: >-
              {{ (state_attr(zone, 'persons') + people) | count !=
              dict.fromkeys(state_attr(zone, 'persons') + people) | count }}
          - condition: template
            value_template: "{{ include_device_tracker == 'zone_people_enabled' }}"
      - condition: trigger
        id:
          - t7_on
          - t7_off
          - t7_stop
          - t8_on
          - t8_off
          - t8_stop
action:
  - choose:
      - alias: >-
          Check if the night lights are enabled and within the night lights
          conditions
        conditions:
          - condition: and
            conditions:
              - alias: Check if night lights is enabled
                condition: or
                conditions:
                  - condition: template
                    value_template: "{{ 'night_lights_enabled' in include_night_lights }}"
              - alias: Check if night lights entity state is enabled
                condition: or
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('time_enabled' in night_lights_conditions) and not
                      ('entity_state_enabled' in night_lights_conditions) }}
                  - condition: template
                    value_template: >-
                      {{ ('sun_enabled' in night_lights_conditions) and not
                      ('entity_state_enabled' in night_lights_conditions) }}
                  - condition: and
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ 'entity_state_enabled' in night_lights_conditions
                          }}
                      - condition: state
                        entity_id: []
                        state: "on"
                        match: any
              - alias: Check if night lights time is enabled
                condition: or
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('entity_state_enabled' in night_lights_conditions) 
                      and not ('time_enabled' in night_lights_conditions) }}
                  - condition: template
                    value_template: >-
                      {{ ('sun_enabled' in night_lights_conditions)  and not
                      ('time_enabled' in night_lights_conditions) }}
                  - condition: and
                    conditions:
                      - condition: template
                        value_template: "{{ 'time_enabled' in night_lights_conditions }}"
                      - condition: time
                        after: "00:00:00"
                        before: "00:00:00"
              - alias: Check if night lights sun is enabled
                condition: or
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('entity_state_enabled' in night_lights_conditions) 
                      and not ('sun_enabled' in night_lights_conditions) }}
                  - condition: template
                    value_template: >-
                      {{ ('time_enabled' in night_lights_conditions)  and not
                      ('sun_enabled' in night_lights_conditions) }}
                  - condition: template
                    value_template: >-
                      {{ ('sun_enabled' in night_lights_conditions) and
                      (((is_state_attr('sun.sun', 'rising', false)) and
                      (state_attr('sun.sun','elevation') <=
                      night_lights_sun_elevation | float(90))) or
                      ((is_state_attr('sun.sun', 'rising', true)) and
                      (state_attr('sun.sun','elevation') <=
                      night_lights_sun_elevation_rising | float(90)))) }}
        sequence:
          - choose:
              - alias: By-pass is turned on  & check by-pass option - turn lights off
                conditions:
                  - condition: trigger
                    id: t7_off
                sequence:
                  - alias: Wait the number of minutes set in the by-pass time delay
                    delay:
                      minutes: 0
                  - choose:
                      - alias: If transition is selected
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ 'use_transition' in include_night_light_control
                              }}
                        sequence:
                          - alias: Turn off the lights
                            service: light.turn_off
                            target:
                              entity_id: "{{ night_light_entities }}"
                            data:
                              transition: "{{ night_transition_off_value }}"
                          - alias: Turn off the scenes
                            service: scene.turn_on
                            data:
                              entity_id: "{{ end_scene_entities }}"
                              transition: "{{ night_transition_off_value }}"
                      - alias: If transition is not selected
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ 'use_transition' not in
                              include_night_light_control }}
                        sequence:
                          - alias: Turn off the lights
                            service: light.turn_off
                            target:
                              entity_id: "{{ night_light_entities }}"
                          - alias: Turn off the scenes
                            service: scene.turn_on
                            data:
                              entity_id: "{{ end_scene_entities }}"
                  - alias: Turn off the switches
                    service: switch.turn_off
                    target:
                      entity_id: "{{ night_switch_entities }}"
                  - alias: Turn off the script
                    service: script.turn_on
                    data:
                      entity_id: "{{ end_script_entities }}"
                  - alias: Turn off the boolean for scenes and scripts
                    service: input_boolean.turn_off
                    data:
                      entity_id: []
                  - alias: Turn off the boolean for scenes and scripts
                    service: input_boolean.turn_off
                    data:
                      entity_id: []
                  - alias: Check by-pass settings and preform the correct action
                    if:
                      - alias: Check if the by-pass auto off is enabled
                        condition: template
                        value_template: >-
                          {{ ('bypass_auto_off_enabled_on' in
                          include_bypass_auto_off) or
                          ('bypass_auto_off_enabled_off' in
                          include_bypass_auto_off) or
                          ('bypass_auto_off_enabled_stop' in
                          include_bypass_auto_off) }}
                    then:
                      - alias: >-
                          Wait the number of minutes set in the by-pass auto off
                          time delay
                        delay:
                          minutes: 60
                      - alias: Parallel Actions for the by-pass auto off
                        parallel:
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_turn_on' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_on' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_turn_off' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_off' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_stop' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_stop' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                      - stop: Stop the automation
                    else:
                      - stop: Stop the automation
              - alias: >-
                  By-pass is turned on  & check by-pass option - Keep the
                  current lights state
                conditions:
                  - condition: trigger
                    id: t7_stop
                sequence:
                  - alias: Check by-pass settings and preform the correct action
                    if:
                      - alias: Check if the by-pass auto off is enabled
                        condition: template
                        value_template: >-
                          {{ ('bypass_auto_off_enabled_on' in
                          include_bypass_auto_off) or
                          ('bypass_auto_off_enabled_off' in
                          include_bypass_auto_off) or
                          ('bypass_auto_off_enabled_stop' in
                          include_bypass_auto_off) }}
                    then:
                      - alias: >-
                          Wait the number of minutes set in the by-pass auto off
                          time delay
                        delay:
                          minutes: 60
                      - alias: Parallel Actions for the by-pass auto off
                        parallel:
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_turn_on' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_on' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_turn_off' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_off' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_stop' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_stop' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                      - stop: Stop the automation
                    else:
                      - stop: Stop the automation
          - choose:
              - alias: By-pass is turned off  & check if the motion trigger is off
                conditions:
                  - condition: trigger
                    id:
                      - t8_on
                      - t8_off
                      - t8_stop
                  - condition: state
                    entity_id:
                      - binary_sensor.moving_living_room
                    match: all
                    state: "off"
                sequence:
                  - choose:
                      - alias: Check all by-pass are off
                        conditions:
                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                        sequence:
                          - alias: >-
                              Wait the number of minutes set in the by-pass time
                              delay
                            delay:
                              minutes: 0
                          - choose:
                              - alias: If transition is selected
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ 'use_transition' in
                                      include_night_light_control }}
                                sequence:
                                  - alias: Turn off the lights
                                    service: light.turn_off
                                    target:
                                      entity_id: "{{ night_light_entities }}"
                                    data:
                                      transition: "{{ night_transition_off_value }}"
                                  - alias: Turn off the scenes
                                    service: scene.turn_on
                                    data:
                                      entity_id: "{{ end_scene_entities }}"
                                      transition: "{{ night_transition_off_value }}"
                              - alias: If transition is not selected
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ 'use_transition' not in
                                      include_night_light_control }}
                                sequence:
                                  - alias: Turn off the lights
                                    service: light.turn_off
                                    target:
                                      entity_id: "{{ night_light_entities }}"
                                  - alias: Turn off the scenes
                                    service: scene.turn_on
                                    data:
                                      entity_id: "{{ end_scene_entities }}"
                          - alias: Turn off the switches
                            service: switch.turn_off
                            target:
                              entity_id: "{{ night_switch_entities }}"
                          - alias: Turn off the script
                            service: script.turn_on
                            data:
                              entity_id: "{{ end_script_entities }}"
                          - alias: Turn off the boolean for scenes and scripts
                            service: input_boolean.turn_off
                            data:
                              entity_id: []
                          - alias: Turn off the boolean for scenes and scripts
                            service: input_boolean.turn_off
                            data:
                              entity_id: []
                          - stop: Stop the automation
                      - alias: >-
                          Motion trigger is off and check if any by-passes are
                          on
                        conditions:
                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                        sequence:
                          - alias: >-
                              Check by-pass settings and preform the correct
                              action
                            if:
                              - alias: Check if the by-pass auto off is enabled
                                condition: template
                                value_template: >-
                                  {{ ('bypass_auto_off_enabled_on' in
                                  include_bypass_auto_off) or
                                  ('bypass_auto_off_enabled_off' in
                                  include_bypass_auto_off) or
                                  ('bypass_auto_off_enabled_stop' in
                                  include_bypass_auto_off) }}
                            then:
                              - alias: >-
                                  Wait the number of minutes set in the by-pass
                                  auto off time delay
                                delay:
                                  minutes: 60
                              - alias: Parallel Actions for the by-pass auto off
                                parallel:
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_turn_on' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_on' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_turn_off' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_off' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_stop' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_stop' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                          - stop: Stop the automation
              - alias: By-pass is turned off  & check if the motion trigger is on
                conditions:
                  - condition: trigger
                    id:
                      - t8_on
                      - t8_off
                      - t8_stop
                  - condition: state
                    entity_id:
                      - binary_sensor.moving_living_room
                    match: any
                    state: "on"
                sequence:
                  - choose:
                      - alias: >-
                          Check all by-pass are off and check conditions if
                          enabled 
                        conditions:
                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                          - condition: or
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ (include_sun == 'sun_enabled') and
                                  (state_attr('sun.sun','elevation') >=
                                  sun_elevation | float(90)) }}
                              - condition: template
                                value_template: >-
                                  {{ (include_ambient == 'ambient_enabled') and
                                  (ambient_light_options ==
                                  'ambient_light_option_disabled') and
                                  (states[ambient_light_sensor].state | int >
                                  ambient_light_value | int) }}
                              - condition: template
                                value_template: >-
                                  {{ (include_ambient == 'ambient_enabled') and
                                  (ambient_light_options ==
                                  'ambient_light_option_enabled') and
                                  (states[ambient_light_sensor].state | int >
                                  ambient_light_value | int) and
                                  (expand(night_lights.entity_id) |
                                  selectattr('state', '==', 'off') | list |
                                  count > 0) }}
                              - condition: template
                                value_template: >-
                                  {{ (include_ambient == 'ambient_enabled') and
                                  (ambient_light_options ==
                                  'ambient_light_option_enabled') and
                                  (states[ambient_light_sensor].state | int >
                                  ambient_light_value | int) and
                                  (is_state(night_boolean_scenes_scripts,
                                  'off')) }}
                              - condition: and
                                conditions:
                                  - condition: time
                                    after: "00:00:00"
                                    before: "00:00:00"
                                  - condition: template
                                    value_template: "{{ include_time == 'time_enabled' }}"
                        sequence:
                          - alias: >-
                              Wait the number of minutes set in the by-pass time
                              delay
                            delay:
                              minutes: 0
                          - choose:
                              - alias: If transition is selected
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ 'use_transition' in
                                      include_night_light_control }}
                                sequence:
                                  - alias: Turn off the lights
                                    service: light.turn_off
                                    target:
                                      entity_id: "{{ night_light_entities }}"
                                    data:
                                      transition: "{{ night_transition_off_value }}"
                                  - alias: Turn off the scenes
                                    service: scene.turn_on
                                    data:
                                      entity_id: "{{ end_scene_entities }}"
                                      transition: "{{ night_transition_off_value }}"
                              - alias: If transition is not selected
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ 'use_transition' not in
                                      include_night_light_control }}
                                sequence:
                                  - alias: Turn off the lights
                                    service: light.turn_off
                                    target:
                                      entity_id: "{{ night_light_entities }}"
                                  - alias: Turn off the scenes
                                    service: scene.turn_on
                                    data:
                                      entity_id: "{{ end_scene_entities }}"
                          - alias: Turn off the switches
                            service: switch.turn_off
                            target:
                              entity_id: "{{ night_switch_entities }}"
                          - alias: Turn off the script
                            service: script.turn_on
                            data:
                              entity_id: "{{ end_script_entities }}"
                          - stop: Stop the automation
                      - alias: Motion trigger is on and check if any by-passes are on
                        conditions:
                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                        sequence:
                          - alias: >-
                              Check by-pass settings and preform the correct
                              action
                            if:
                              - alias: Check if the by-pass auto off is enabled
                                condition: template
                                value_template: >-
                                  {{ ('bypass_auto_off_enabled_on' in
                                  include_bypass_auto_off) or
                                  ('bypass_auto_off_enabled_off' in
                                  include_bypass_auto_off) or
                                  ('bypass_auto_off_enabled_stop' in
                                  include_bypass_auto_off) }}
                            then:
                              - alias: >-
                                  Wait the number of minutes set in the by-pass
                                  auto off time delay
                                delay:
                                  minutes: 60
                              - alias: Parallel Actions for the by-pass auto off
                                parallel:
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_turn_on' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_on' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_turn_off' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_off' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_stop' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_stop' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                          - stop: Stop the automation
          - choose:
              - alias: Sun, Ambient Light Sensor & time above setting to turn off
                conditions:
                  - condition: trigger
                    id:
                      - t9
                      - t10
                      - t11
                sequence:
                  - choose:
                      - alias: If transition is selected
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ 'use_transition' in include_night_light_control
                              }}
                        sequence:
                          - alias: Turn off the lights
                            service: light.turn_off
                            target:
                              entity_id: "{{ night_light_entities }}"
                            data:
                              transition: "{{ night_transition_off_value }}"
                          - alias: Turn off the scenes
                            service: scene.turn_on
                            data:
                              entity_id: "{{ end_scene_entities }}"
                              transition: "{{ night_transition_off_value }}"
                      - alias: If transition is not selected
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ 'use_transition' not in
                              include_night_light_control }}
                        sequence:
                          - alias: Turn off the lights
                            service: light.turn_off
                            target:
                              entity_id: "{{ night_light_entities }}"
                          - alias: Turn off the scenes
                            service: scene.turn_on
                            data:
                              entity_id: "{{ end_scene_entities }}"
                  - alias: Turn off the switches
                    service: switch.turn_off
                    target:
                      entity_id: "{{ night_switch_entities }}"
                  - alias: Turn off the script
                    service: script.turn_on
                    data:
                      entity_id: "{{ end_script_entities }}"
                  - alias: Turn off the input boolean night lights
                    service: input_boolean.turn_off
                    data:
                      entity_id: []
                  - stop: Stop the automation
              - alias: >-
                  Turn off normal lights when trigger by start night lights
                  conditions
                conditions:
                  - condition: trigger
                    id:
                      - t4
                      - t5
                      - t6
                sequence:
                  - choose:
                      - alias: light - switch - scene - script is ON
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ (expand(light_switch.entity_id) |
                              selectattr('state', '==', 'on') | list | count >
                              0) or (expand(night_lights.entity_id) |
                              selectattr('state', '==', 'on') | list | count >
                              0) or (is_state(boolean_scenes_scripts, 'on')) }}
                        sequence:
                          - choose:
                              - alias: If transition is selected
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ 'use_transition' in
                                      include_light_control }}
                                sequence:
                                  - alias: Turn off the lights
                                    service: light.turn_off
                                    target:
                                      entity_id: "{{ crossover_lights_light }}"
                                    data:
                                      transition: "{{ transition_off_value }}"
                              - alias: If transition is not selected
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ 'use_transition' not in
                                      include_light_control }}
                                sequence:
                                  - alias: Turn off the lights
                                    service: light.turn_off
                                    target:
                                      entity_id: "{{ crossover_lights_light }}"
                          - alias: Turn off the switches
                            service: switch.turn_off
                            target:
                              entity_id: "{{ crossover_lights_switch }}"
                          - alias: Turn off the script
                            service: script.turn_on
                            data:
                              entity_id: "{{ end_script_entities }}"
                          - choose:
                              - alias: >-
                                  If adjust light settings when crossing over if
                                  lights are ON is selected in night light
                                  control
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{
                                      'if_lights_are_on_adjust_when_crossing_over'
                                      in include_night_light_control }}
                                sequence:
                                  - choose:
                                      - alias: If transition is selected
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ 'use_transition' in
                                              include_light_control }}
                                        sequence:
                                          - alias: Turn off the scenes
                                            service: scene.turn_on
                                            data:
                                              entity_id: "{{ end_scene_entities }}"
                                              transition: "{{ transition_off_value }}"
                                      - alias: If transition is not selected
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ 'use_transition' not in
                                              include_light_control }}
                                        sequence:
                                          - alias: Turn off the scenes
                                            service: scene.turn_on
                                            data:
                                              entity_id: "{{ end_scene_entities }}"
                                  - alias: Turn off the input boolean normal lights
                                    service: input_boolean.turn_off
                                    data:
                                      entity_id: []
                                  - choose:
                                      - alias: >-
                                          Set the transition and brightness for
                                          the night lights switch
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('use_transition' in
                                              include_night_light_control) and
                                              ('use_brightness' in
                                              include_night_light_control) and
                                              ('use_colour_temperature' not in
                                              include_night_light_control) }}
                                        sequence:
                                          - service: light.turn_on
                                            target:
                                              entity_id: "{{ crossover_night_lights_light_on }}"
                                            data:
                                              transition: "{{ night_transition_on_value }}"
                                              brightness_pct: "{{ night_brightness_value }}"
                                      - alias: >-
                                          Set the transition and colour
                                          temperature for the night lights switch
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('use_transition' in
                                              include_night_light_control) and
                                              ('use_brightness' not in
                                              include_night_light_control) and
                                              ('use_colour_temperature' in
                                              include_night_light_control) }}
                                        sequence:
                                          - service: light.turn_on
                                            target:
                                              entity_id: "{{ crossover_night_lights_light_on }}"
                                            data:
                                              transition: "{{ night_transition_on_value }}"
                                              color_temp_kelvin: "{{ night_temperature_value }}"
                                      - alias: >-
                                          Set the transition, brightness and
                                          colour temperature for the night lights
                                          switch
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('use_transition' in
                                              include_night_light_control) and
                                              ('use_brightness' in
                                              include_night_light_control) and
                                              ('use_colour_temperature' in
                                              include_night_light_control) }}
                                        sequence:
                                          - service: light.turn_on
                                            target:
                                              entity_id: "{{ crossover_night_lights_light_on }}"
                                            data:
                                              transition: "{{ night_transition_on_value }}"
                                              brightness_pct: "{{ night_brightness_value }}"
                                              color_temp_kelvin: "{{ night_temperature_value }}"
                                      - alias: >-
                                          Set the brightness for the night lights
                                          switch
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('use_transition' not in
                                              include_night_light_control) and
                                              ('use_brightness' in
                                              include_night_light_control) and
                                              ('use_colour_temperature' not in
                                              include_night_light_control) }}
                                        sequence:
                                          - service: light.turn_on
                                            target:
                                              entity_id: "{{ crossover_night_lights_light_on }}"
                                            data:
                                              brightness_pct: "{{ night_brightness_value }}"
                                      - alias: >-
                                          Set the colour temperature for the night
                                          lights switch
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('use_transition' not in
                                              include_night_light_control) and
                                              ('use_brightness' not in
                                              include_night_light_control) and
                                              ('use_colour_temperature' in
                                              include_night_light_control) }}
                                        sequence:
                                          - service: light.turn_on
                                            target:
                                              entity_id: "{{ crossover_night_lights_light_on }}"
                                            data:
                                              color_temp_kelvin: "{{ night_temperature_value }}"
                                      - alias: >-
                                          Set the brightness and colour
                                          temperature for the night lights switch
                                        conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('use_transition' not in
                                              include_night_light_control) and
                                              ('use_brightness' in
                                              include_night_light_control) and
                                              ('use_colour_temperature' in
                                              include_night_light_control) }}
                                        sequence:
                                          - service: light.turn_on
                                            target:
                                              entity_id: "{{ crossover_night_lights_light_on }}"
                                            data:
                                              brightness_pct: "{{ night_brightness_value }}"
                                              color_temp_kelvin: "{{ night_temperature_value }}"
                      - alias: light - switch - scene - script is ON
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ 'manage_scripts_crossing_over' in
                              include_night_light_control }}
                          - condition: template
                            value_template: >-
                              {{ (expand(light_switch.entity_id) |
                              selectattr('state', '==', 'off') | list | count >
                              0) or (expand(night_lights.entity_id) |
                              selectattr('state', '==', 'off') | list | count >
                              0) or (is_state(boolean_scenes_scripts, 'off')) }}
                        sequence:
                          - alias: Turn off the script
                            service: script.turn_on
                            data:
                              entity_id: "{{ end_script_entities }}"
                          - stop: Stop the automation
              - alias: Safe Guard when HA restarts
                conditions:
                  - condition: trigger
                    id: t15
                sequence:
                  - choose:
                      - alias: >-
                          Check all by-pass are off and check conditions if
                          enabled 
                        conditions:
                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    state: "off"
                        sequence:
                          - alias: Small time delay required
                            delay:
                              seconds: 1
                      - alias: Check if any by-passes are on
                        conditions:
                          - condition: or
                            conditions:
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: or
                                    conditions:
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                                      - condition: state
                                        entity_id: []
                                        match: any
                                        state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' in
                                      include_bypass) and ('bypass_enabled_stop'
                                      not in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                              - condition: and
                                conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' not in
                                      include_bypass) and
                                      ('bypass_enabled_turn_off' not in
                                      include_bypass) and ('bypass_enabled_stop'
                                      in include_bypass) }}
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                        sequence:
                          - alias: >-
                              Check by-pass auto off is enabled and preform the
                              correct
                            if:
                              - alias: Check if the by-pass auto off is enabled
                                condition: template
                                value_template: >-
                                  {{ ('bypass_auto_off_enabled_on' in
                                  include_bypass_auto_off) or
                                  ('bypass_auto_off_enabled_off' in
                                  include_bypass_auto_off) or
                                  ('bypass_auto_off_enabled_stop' in
                                  include_bypass_auto_off) }}
                            then:
                              - alias: >-
                                  Wait the number of minutes set in the by-pass
                                  auto off time delay
                                delay:
                                  minutes: 60
                              - alias: Parallel Actions for the by-pass auto off
                                parallel:
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_turn_on' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_on' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_turn_off' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_off' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                                  - sequence:
                                      - choose:
                                          - conditions:
                                              - condition: template
                                                value_template: >-
                                                  {{ ('bypass_enabled_stop' in
                                                  include_bypass) and
                                                  ('bypass_auto_off_enabled_stop' in
                                                  include_bypass_auto_off) }}
                                            sequence:
                                              - alias: Turn off the by-pass
                                                service: homeassistant.turn_off
                                                entity_id: []
                          - stop: Stop the automation
          - choose:
              - alias: Set the transition for the night lights switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' in include_night_light_control) and
                      ('use_brightness' not in include_night_light_control) and
                      ('use_colour_temperature' not in
                      include_night_light_control) }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      transition: "{{ night_transition_on_value }}"
              - alias: Set the transition and brightness for the night lights switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' in include_night_light_control) and
                      ('use_brightness' in include_night_light_control) and
                      ('use_colour_temperature' not in
                      include_night_light_control) }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      transition: "{{ night_transition_on_value }}"
                      brightness_pct: "{{ night_brightness_value }}"
              - alias: >-
                  Set the transition and colour temperature for the night lights
                  switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' in include_night_light_control) and
                      ('use_brightness' not in include_night_light_control) and
                      ('use_colour_temperature' in include_night_light_control)
                      }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      transition: "{{ night_transition_on_value }}"
                      color_temp_kelvin: "{{ night_temperature_value }}"
              - alias: >-
                  Set the transition, brightness and colour temperature for the
                  night lights switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' in include_night_light_control) and
                      ('use_brightness' in include_night_light_control) and
                      ('use_colour_temperature' in include_night_light_control)
                      }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      transition: "{{ night_transition_on_value }}"
                      brightness_pct: "{{ night_brightness_value }}"
                      color_temp_kelvin: "{{ night_temperature_value }}"
              - alias: Set the brightness for the night lights switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' not in include_night_light_control)
                      and ('use_brightness' in include_night_light_control) and
                      ('use_colour_temperature' not in
                      include_night_light_control) }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      brightness_pct: "{{ night_brightness_value }}"
              - alias: Set the colour temperature for the night lights switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' not in include_night_light_control)
                      and ('use_brightness' not in include_night_light_control)
                      and ('use_colour_temperature' in
                      include_night_light_control) }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      color_temp_kelvin: "{{ night_temperature_value }}"
              - alias: >-
                  Set the brightness and colour temperature for the night lights
                  switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' not in include_night_light_control)
                      and ('use_brightness' in include_night_light_control) and
                      ('use_colour_temperature' in include_night_light_control)
                      }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
                    data:
                      brightness_pct: "{{ night_brightness_value }}"
                      color_temp_kelvin: "{{ night_temperature_value }}"
              - alias: Set the default for the night lights switch
                conditions:
                  - condition: template
                    value_template: >-
                      {{ ('use_transition' not in include_night_light_control)
                      and ('use_brightness' not in include_night_light_control)
                      and ('use_colour_temperature' not in
                      include_night_light_control) }}
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ night_light_entities_off }}"
          - choose:
              - alias: >-
                  Check if normal lights scenes or scripts helper is on - This
                  is for scenes only when crossing over
                conditions:
                  - condition: template
                    value_template: |-
                      {% if boolean_scenes_scripts == [] %}
                        false
                      {% elif is_state(boolean_scenes_scripts, 'on') %}
                        true
                      {% else %}
                        false
                      {% endif %}
                sequence: null
              - alias: If transition is selected
                conditions:
                  - condition: template
                    value_template: "{{ 'use_transition' in include_night_light_control }}"
                sequence:
                  - alias: Turn on the night scenes
                    service: scene.turn_on
                    target:
                      entity_id: "{{ night_scene_entities }}"
                    data:
                      transition: "{{ night_transition_on_value }}"
                  - alias: Turn on the boolean for scenes and scripts
                    service: input_boolean.turn_on
                    data:
                      entity_id: "{{ night_boolean_scenes_scripts_helper }}"
              - alias: If transition is not selected
                conditions:
                  - condition: template
                    value_template: "{{ 'use_transition' not in include_night_light_control }}"
                sequence:
                  - alias: Turn on the night scenes
                    service: scene.turn_on
                    target:
                      entity_id: "{{ night_scene_entities }}"
                  - alias: Turn on the boolean for scenes and scripts
                    service: input_boolean.turn_on
                    data:
                      entity_id: "{{ night_boolean_scenes_scripts_helper }}"
          - alias: Turn on the night switches
            service: switch.turn_on
            target:
              entity_id: "{{ night_switch_entities_off }}"
          - alias: Turn on the night scripts
            service: script.turn_on
            target:
              entity_id: "{{ night_script_entities }}"
          - choose:
              - alias: By-pass is enabled & check by-pass option - turn lights on
                conditions:
                  - condition: trigger
                    id: t7_on
                sequence:
                  - alias: Check by-pass settings and preform the correct action
                    if:
                      - alias: Check if the by-pass auto off is enabled
                        condition: template
                        value_template: >-
                          {{ ('bypass_auto_off_enabled_on' in
                          include_bypass_auto_off) or
                          ('bypass_auto_off_enabled_off' in
                          include_bypass_auto_off) or
                          ('bypass_auto_off_enabled_stop' in
                          include_bypass_auto_off) }}
                    then:
                      - alias: >-
                          Wait the number of minutes set in the by-pass auto off
                          time delay
                        delay:
                          minutes: 60
                      - alias: Parallel Actions for the by-pass auto off
                        parallel:
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_turn_on' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_on' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_turn_off' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_off' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                          - sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('bypass_enabled_stop' in
                                          include_bypass) and
                                          ('bypass_auto_off_enabled_stop' in
                                          include_bypass_auto_off) }}
                                    sequence:
                                      - alias: Turn off the by-pass
                                        service: homeassistant.turn_off
                                        entity_id: []
                      - stop: Stop the automation
                    else:
                      - stop: Stop the automation
          - choose:
              - alias: Check if the trigger is on and wait for it to go off
                conditions:
                  - condition: state
                    entity_id:
                      - binary_sensor.moving_living_room
                    state: "on"
                    match: any
                sequence:
                  - alias: Wait until motion sensor is off
                    wait_for_trigger:
                      - platform: state
                        entity_id:
                          - binary_sensor.moving_living_room
                        from: "on"
                        to: "off"
          - alias: Wait the number of minutes set in the night lights time delay
            delay:
              minutes: 5
          - choose:
              - alias: If transition is selected
                conditions:
                  - condition: template
                    value_template: "{{ 'use_transition' in include_night_light_control }}"
                sequence:
                  - alias: Turn off the lights
                    service: light.turn_off
                    target:
                      entity_id: "{{ night_light_entities }}"
                    data:
                      transition: "{{ night_transition_off_value }}"
                  - alias: Turn off the scenes
                    service: scene.turn_on
                    data:
                      entity_id: "{{ end_scene_entities }}"
                      transition: "{{ night_transition_off_value }}"
              - alias: If transition is not selected
                conditions:
                  - condition: template
                    value_template: "{{ 'use_transition' not in include_night_light_control }}"
                sequence:
                  - alias: Turn off the lights
                    service: light.turn_off
                    target:
                      entity_id: "{{ night_light_entities }}"
                  - alias: Turn off the scenes
                    service: scene.turn_on
                    data:
                      entity_id: "{{ end_scene_entities }}"
          - alias: Turn off the switches
            service: switch.turn_off
            target:
              entity_id: "{{ night_switch_entities }}"
          - alias: Turn off the script
            service: script.turn_on
            data:
              entity_id: "{{ end_script_entities }}"
          - alias: Turn off the boolean for scenes and scripts
            service: input_boolean.turn_off
            data:
              entity_id: []
    default:
      - choose:
          - alias: By-pass is turned on  & check by-pass option - turn lights off
            conditions:
              - condition: trigger
                id: t7_off
            sequence:
              - alias: Wait the number of minutes set in the by-pass time delay
                delay:
                  minutes: 0
              - choose:
                  - alias: If transition is selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' in include_light_control }}"
                    sequence:
                      - alias: Turn off the lights
                        service: light.turn_off
                        target:
                          entity_id: "{{ light_entities }}"
                        data:
                          transition: "{{ transition_off_value }}"
                      - alias: Turn off the scenes
                        service: scene.turn_on
                        data:
                          entity_id: "{{ end_scene_entities }}"
                          transition: "{{ transition_off_value }}"
                  - alias: If transition is not selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' not in include_light_control }}"
                    sequence:
                      - alias: Turn off the lights
                        service: light.turn_off
                        target:
                          entity_id: "{{ light_entities }}"
                      - alias: Turn off the scenes
                        service: scene.turn_on
                        data:
                          entity_id: "{{ end_scene_entities }}"
              - alias: Turn off the switches
                service: switch.turn_off
                target:
                  entity_id: "{{ switch_entities }}"
              - alias: Turn off the script
                service: script.turn_on
                data:
                  entity_id: "{{ end_script_entities }}"
              - alias: Turn off the boolean for scenes and scripts
                service: input_boolean.turn_off
                data:
                  entity_id: []
              - alias: Turn off the boolean for scenes and scripts
                service: input_boolean.turn_off
                data:
                  entity_id: []
              - alias: Check by-pass settings and preform the correct action
                if:
                  - alias: Check if the by-pass auto off is enabled
                    condition: template
                    value_template: >-
                      {{ ('bypass_auto_off_enabled_on' in
                      include_bypass_auto_off) or ('bypass_auto_off_enabled_off'
                      in include_bypass_auto_off) or
                      ('bypass_auto_off_enabled_stop' in
                      include_bypass_auto_off) }}
                then:
                  - alias: >-
                      Wait the number of minutes set in the by-pass auto off
                      time delay
                    delay:
                      minutes: 60
                  - alias: Parallel Actions for the by-pass auto off
                    parallel:
                      - sequence:
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_auto_off_enabled_on' in
                                      include_bypass_auto_off) }}
                                sequence:
                                  - alias: Turn off the by-pass
                                    service: homeassistant.turn_off
                                    entity_id: []
                      - sequence:
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_off' in
                                      include_bypass) and
                                      ('bypass_auto_off_enabled_off' in
                                      include_bypass_auto_off) }}
                                sequence:
                                  - alias: Turn off the by-pass
                                    service: homeassistant.turn_off
                                    entity_id: []
                      - sequence:
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_stop' in
                                      include_bypass) and
                                      ('bypass_auto_off_enabled_stop' in
                                      include_bypass_auto_off) }}
                                sequence:
                                  - alias: Turn off the by-pass
                                    service: homeassistant.turn_off
                                    entity_id: []
                  - stop: Stop the automation
                else:
                  - stop: Stop the automation
          - alias: >-
              By-pass is turned on  & check by-pass option - Keep the current
              lights state
            conditions:
              - condition: trigger
                id: t7_stop
            sequence:
              - alias: Check by-pass settings and preform the correct action
                if:
                  - alias: Check if the by-pass auto off is enabled
                    condition: template
                    value_template: >-
                      {{ ('bypass_auto_off_enabled_on' in
                      include_bypass_auto_off) or ('bypass_auto_off_enabled_off'
                      in include_bypass_auto_off) or
                      ('bypass_auto_off_enabled_stop' in
                      include_bypass_auto_off) }}
                then:
                  - alias: >-
                      Wait the number of minutes set in the by-pass auto off
                      time delay
                    delay:
                      minutes: 60
                  - alias: Parallel Actions for the by-pass auto off
                    parallel:
                      - sequence:
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_on' in
                                      include_bypass) and
                                      ('bypass_auto_off_enabled_on' in
                                      include_bypass_auto_off) }}
                                sequence:
                                  - alias: Turn off the by-pass
                                    service: homeassistant.turn_off
                                    entity_id: []
                      - sequence:
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_turn_off' in
                                      include_bypass) and
                                      ('bypass_auto_off_enabled_off' in
                                      include_bypass_auto_off) }}
                                sequence:
                                  - alias: Turn off the by-pass
                                    service: homeassistant.turn_off
                                    entity_id: []
                      - sequence:
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: >-
                                      {{ ('bypass_enabled_stop' in
                                      include_bypass) and
                                      ('bypass_auto_off_enabled_stop' in
                                      include_bypass_auto_off) }}
                                sequence:
                                  - alias: Turn off the by-pass
                                    service: homeassistant.turn_off
                                    entity_id: []
                  - stop: Stop the automation
                else:
                  - stop: Stop the automation
      - choose:
          - alias: By-pass is turned off  & check if the motion trigger is off
            conditions:
              - condition: trigger
                id:
                  - t8_on
                  - t8_off
                  - t8_stop
              - condition: state
                entity_id:
                  - binary_sensor.moving_living_room
                match: all
                state: "off"
            sequence:
              - choose:
                  - alias: Check all by-pass are off
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' not in include_bypass)
                                  }}
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                    sequence:
                      - alias: >-
                          Wait the number of minutes set in the by-pass time
                          delay
                        delay:
                          minutes: 0
                      - choose:
                          - alias: If transition is selected
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ 'use_transition' in include_light_control
                                  }}
                            sequence:
                              - alias: Turn off the lights
                                service: light.turn_off
                                target:
                                  entity_id: "{{ light_entities }}"
                                data:
                                  transition: "{{ transition_off_value }}"
                              - alias: Turn off the scenes
                                service: scene.turn_on
                                data:
                                  entity_id: "{{ end_scene_entities }}"
                                  transition: "{{ transition_off_value }}"
                          - alias: If transition is not selected
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ 'use_transition' not in
                                  include_light_control }}
                            sequence:
                              - alias: Turn off the lights
                                service: light.turn_off
                                target:
                                  entity_id: "{{ light_entities }}"
                              - alias: Turn off the scenes
                                service: scene.turn_on
                                data:
                                  entity_id: "{{ end_scene_entities }}"
                      - alias: Turn off the switches
                        service: switch.turn_off
                        target:
                          entity_id: "{{ switch_entities }}"
                      - alias: Turn off the script
                        service: script.turn_on
                        data:
                          entity_id: "{{ end_script_entities }}"
                      - alias: Turn off the boolean for scenes and scripts
                        service: input_boolean.turn_off
                        data:
                          entity_id: []
                      - alias: Turn off the boolean for scenes and scripts
                        service: input_boolean.turn_off
                        data:
                          entity_id: []
                      - stop: Stop the automation
                  - alias: Motion trigger is off and check if any by-passes are on
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' not in include_bypass)
                                  }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                    sequence:
                      - alias: Check by-pass settings and preform the correct action
                        if:
                          - alias: Check if the by-pass auto off is enabled
                            condition: template
                            value_template: >-
                              {{ ('bypass_auto_off_enabled_on' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_off' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_stop' in
                              include_bypass_auto_off) }}
                        then:
                          - alias: >-
                              Wait the number of minutes set in the by-pass auto
                              off time delay
                            delay:
                              minutes: 60
                          - alias: Parallel Actions for the by-pass auto off
                            parallel:
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_on' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_on' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_off' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_off' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_stop' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_stop' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                      - stop: Stop the automation
          - alias: By-pass is turned off & check if the motion trigger is on
            conditions:
              - condition: trigger
                id:
                  - t8_on
                  - t8_off
                  - t8_stop
              - condition: state
                entity_id:
                  - binary_sensor.moving_living_room
                match: any
                state: "on"
            sequence:
              - choose:
                  - alias: "Check all by-pass are off and check conditions if enabled "
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' not in include_bypass)
                                  }}
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                      - condition: or
                        conditions:
                          - condition: template
                            value_template: >-
                              {{ (include_sun == 'sun_enabled') and
                              (state_attr('sun.sun','elevation') >=
                              sun_elevation | float(90)) }}
                          - condition: template
                            value_template: >-
                              {{ (include_ambient == 'ambient_enabled') and
                              (ambient_light_options ==
                              'ambient_light_option_disabled') and
                              (states[ambient_light_sensor].state | int >
                              ambient_light_value | int) }}
                          - condition: template
                            value_template: >-
                              {{ (include_ambient == 'ambient_enabled') and
                              (ambient_light_options ==
                              'ambient_light_option_enabled') and
                              (states[ambient_light_sensor].state | int >
                              ambient_light_value | int) and
                              (expand(light_switch.entity_id) |
                              selectattr('state', '==', 'off') | list | count >
                              0) }}
                          - condition: template
                            value_template: >-
                              {{ (include_ambient == 'ambient_enabled') and
                              (ambient_light_options ==
                              'ambient_light_option_enabled') and
                              (states[ambient_light_sensor].state | int >
                              ambient_light_value | int) and
                              (is_state(boolean_scenes_scripts, 'off')) }}
                          - condition: and
                            conditions:
                              - condition: time
                                after: "00:00:00"
                                before: "00:00:00"
                              - condition: template
                                value_template: "{{ include_time == 'time_enabled' }}"
                    sequence:
                      - alias: >-
                          Wait the number of minutes set in the by-pass time
                          delay
                        delay:
                          minutes: 0
                      - choose:
                          - alias: If transition is selected
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ 'use_transition' in include_light_control
                                  }}
                            sequence:
                              - alias: Turn off the lights
                                service: light.turn_off
                                target:
                                  entity_id: "{{ light_entities }}"
                                data:
                                  transition: "{{ transition_off_value }}"
                              - alias: Turn off the scenes
                                service: scene.turn_on
                                data:
                                  entity_id: "{{ end_scene_entities }}"
                                  transition: "{{ transition_off_value }}"
                          - alias: If transition is not selected
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ 'use_transition' not in
                                  include_light_control }}
                            sequence:
                              - alias: Turn off the lights
                                service: light.turn_off
                                target:
                                  entity_id: "{{ light_entities }}"
                              - alias: Turn off the scenes
                                service: scene.turn_on
                                data:
                                  entity_id: "{{ end_scene_entities }}"
                      - alias: Turn off the switches
                        service: switch.turn_off
                        target:
                          entity_id: "{{ switch_entities }}"
                      - alias: Turn off the script
                        service: script.turn_on
                        data:
                          entity_id: "{{ end_script_entities }}"
                      - stop: Stop the automation
                  - alias: Motion trigger is on and check if any by-passes are on
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' not in include_bypass)
                                  }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                    sequence:
                      - alias: Check by-pass settings and preform the correct action
                        if:
                          - alias: Check if the by-pass auto off is enabled
                            condition: template
                            value_template: >-
                              {{ ('bypass_auto_off_enabled_on' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_off' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_stop' in
                              include_bypass_auto_off) }}
                        then:
                          - alias: >-
                              Wait the number of minutes set in the by-pass auto
                              off time delay
                            delay:
                              minutes: 60
                          - alias: Parallel Actions for the by-pass auto off
                            parallel:
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_on' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_on' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_off' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_off' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_stop' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_stop' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                      - stop: Stop the automation
      - choose:
          - alias: Sun, Ambient Light Sensor & time above setting to turn off
            conditions:
              - condition: trigger
                id:
                  - t9
                  - t10
                  - t11
            sequence:
              - choose:
                  - alias: If transition is selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' in include_light_control }}"
                    sequence:
                      - alias: Turn off the lights
                        service: light.turn_off
                        target:
                          entity_id: "{{ light_entities }}"
                        data:
                          transition: "{{ transition_off_value }}"
                      - alias: Turn off the scenes
                        service: scene.turn_on
                        data:
                          entity_id: "{{ end_scene_entities }}"
                          transition: "{{ transition_off_value }}"
                  - alias: If transition is not selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' not in include_light_control }}"
                    sequence:
                      - alias: Turn off the lights
                        service: light.turn_off
                        target:
                          entity_id: "{{ light_entities }}"
                      - alias: Turn off the scenes
                        service: scene.turn_on
                        data:
                          entity_id: "{{ end_scene_entities }}"
              - alias: Turn off the switches
                service: switch.turn_off
                target:
                  entity_id: "{{ switch_entities }}"
              - alias: Turn off the script
                service: script.turn_on
                data:
                  entity_id: "{{ end_script_entities }}"
              - alias: Turn off the input boolean night lights
                service: input_boolean.turn_off
                data:
                  entity_id: []
              - stop: Stop the automation
          - alias: Turn off night lights when trigger by end night lights conditions
            conditions:
              - condition: trigger
                id:
                  - t12
                  - t13
                  - t14
            sequence:
              - choose:
                  - alias: If transition is selected
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ (expand(light_switch.entity_id) |
                          selectattr('state', '==', 'on') | list | count > 0) or
                          (expand(night_lights.entity_id) | selectattr('state',
                          '==', 'on') | list | count > 0) or
                          (is_state(night_boolean_scenes_scripts, 'on')) }}
                    sequence:
                      - choose:
                          - alias: If transition is selected
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ 'use_transition' in
                                  include_night_light_control }}
                            sequence:
                              - alias: Turn off the lights
                                service: light.turn_off
                                target:
                                  entity_id: "{{ crossover_night_lights_light }}"
                                data:
                                  transition: "{{ night_transition_off_value }}"
                          - alias: If transition is not selected
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ 'use_transition' not in
                                  include_night_light_control }}
                            sequence:
                              - alias: Turn off the lights
                                service: light.turn_off
                                target:
                                  entity_id: "{{ crossover_night_lights_light }}"
                      - alias: Turn off the switches
                        service: switch.turn_off
                        target:
                          entity_id: "{{ crossover_night_lights_switch }}"
                      - alias: Turn off the script
                        service: script.turn_on
                        data:
                          entity_id: "{{ end_script_entities }}"
                      - choose:
                          - alias: >-
                              If adjust light settings when crossing over if
                              lights are ON is selected in night light control
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{
                                  'if_lights_are_on_adjust_when_crossing_over'
                                  in include_night_light_control }}
                            sequence:
                              - choose:
                                  - alias: If transition is selected
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ 'use_transition' in
                                          include_night_light_control }}
                                    sequence:
                                      - alias: Turn off the scenes
                                        service: scene.turn_on
                                        data:
                                          entity_id: "{{ end_scene_entities }}"
                                          transition: "{{ night_transition_off_value }}"
                                  - alias: If transition is not selected
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ 'use_transition' not in
                                          include_night_light_control }}
                                    sequence:
                                      - alias: Turn off the scenes
                                        service: scene.turn_on
                                        data:
                                          entity_id: "{{ end_scene_entities }}"
                              - alias: Turn off the input boolean night lights
                                service: input_boolean.turn_off
                                data:
                                  entity_id: []
                              - choose:
                                  - alias: >-
                                      Set the transition and brightness for the
                                      normal lights switch
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('use_transition' in
                                          include_light_control) and
                                          ('use_brightness' in
                                          include_light_control) and
                                          ('enable_lux_controled_brightness' not
                                          in include_dynamic_lighting) and
                                          ('use_colour_temperature' not in
                                          include_light_control) }}
                                    sequence:
                                      - service: light.turn_on
                                        target:
                                          entity_id: "{{ crossover_lights_light_on }}"
                                        data:
                                          transition: "{{ transition_on_value }}"
                                          brightness_pct: "{{ brightness_value }}"
                                  - alias: >-
                                      Set the transition and colour temperature
                                      for the normal lights switch
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('use_transition' in
                                          include_light_control) and
                                          ('use_brightness' not in
                                          include_light_control) and
                                          ('enable_lux_controled_brightness' not
                                          in include_dynamic_lighting) and
                                          ('use_colour_temperature' in
                                          include_light_control) }}
                                    sequence:
                                      - service: light.turn_on
                                        target:
                                          entity_id: "{{ crossover_lights_light_on }}"
                                        data:
                                          transition: "{{ transition_on_value }}"
                                          color_temp_kelvin: "{{temperature_value}}"
                                  - alias: >-
                                      Set the transition, brightness and colour
                                      temperature for the normal lights switch
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('use_transition' in
                                          include_light_control) and
                                          ('use_brightness' in
                                          include_light_control) and
                                          ('enable_lux_controled_brightness' not
                                          in include_dynamic_lighting) and
                                          ('use_colour_temperature' in
                                          include_light_control) }}
                                    sequence:
                                      - service: light.turn_on
                                        target:
                                          entity_id: "{{ crossover_lights_light_on }}"
                                        data:
                                          transition: "{{ transition_on_value }}"
                                          brightness_pct: "{{ brightness_value }}"
                                          color_temp_kelvin: "{{temperature_value}}"
                                  - alias: >-
                                      Set the brightness for the normal lights
                                      switch
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('use_transition' not in
                                          include_light_control) and
                                          ('use_brightness' in
                                          include_light_control) and
                                          ('enable_lux_controled_brightness' not
                                          in include_dynamic_lighting) and
                                          ('use_colour_temperature' not in
                                          include_light_control) }}
                                    sequence:
                                      - service: light.turn_on
                                        target:
                                          entity_id: "{{ crossover_lights_light_on }}"
                                        data:
                                          brightness_pct: "{{ brightness_value }}"
                                  - alias: >-
                                      Set the colour temperature for the normal
                                      lights switch
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('use_transition' not in
                                          include_light_control) and
                                          ('use_brightness' not in
                                          include_light_control) and
                                          ('enable_lux_controled_brightness' not
                                          in include_dynamic_lighting) and
                                          ('use_colour_temperature' in
                                          include_light_control) }}
                                    sequence:
                                      - service: light.turn_on
                                        target:
                                          entity_id: "{{ crossover_lights_light_on }}"
                                        data:
                                          color_temp_kelvin: "{{temperature_value}}"
                                  - alias: >-
                                      Set the brightness and colour temperature
                                      for the normal lights switch
                                    conditions:
                                      - condition: template
                                        value_template: >-
                                          {{ ('use_transition' not in
                                          include_light_control) and
                                          ('use_brightness' in
                                          include_light_control) and
                                          ('enable_lux_controled_brightness' not
                                          in include_dynamic_lighting) and
                                          ('use_colour_temperature' in
                                          include_light_control) }}
                                    sequence:
                                      - service: light.turn_on
                                        target:
                                          entity_id: "{{ crossover_lights_light_on }}"
                                        data:
                                          brightness_pct: "{{ brightness_value }}"
                                          color_temp_kelvin: "{{temperature_value}}"
                  - alias: If transition is selected
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ 'manage_scripts_crossing_over' in
                          include_night_light_control }}
                      - condition: template
                        value_template: >-
                          {{ (expand(light_switch.entity_id) |
                          selectattr('state', '==', 'off') | list | count > 0)
                          or (expand(night_lights.entity_id) |
                          selectattr('state', '==', 'off') | list | count > 0)
                          or (is_state(night_boolean_scenes_scripts, 'off')) }}
                    sequence:
                      - alias: Turn off the script
                        service: script.turn_on
                        data:
                          entity_id: "{{ end_script_entities }}"
                      - stop: Stop the automation
          - alias: Safe Guard when HA restarts
            conditions:
              - condition: trigger
                id: t15
            sequence:
              - choose:
                  - alias: "Check all by-pass are off and check conditions if enabled "
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' not in include_bypass)
                                  }}
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                state: "off"
                    sequence:
                      - alias: Small time delay required
                        delay:
                          seconds: 1
                  - alias: Check if any by-passes are on
                    conditions:
                      - condition: or
                        conditions:
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  in include_bypass) }}
                              - condition: or
                                conditions:
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                                  - condition: state
                                    entity_id: []
                                    match: any
                                    state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' not in include_bypass)
                                  }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  in include_bypass) and ('bypass_enabled_stop'
                                  not in include_bypass) }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                          - condition: and
                            conditions:
                              - condition: template
                                value_template: >-
                                  {{ ('bypass_enabled_turn_on' not in
                                  include_bypass) and ('bypass_enabled_turn_off'
                                  not in include_bypass) and
                                  ('bypass_enabled_stop' in include_bypass) }}
                              - condition: state
                                entity_id: []
                                match: any
                                state: "on"
                    sequence:
                      - alias: >-
                          Check by-pass auto off is enabled and preform the
                          correct
                        if:
                          - alias: Check if the by-pass auto off is enabled
                            condition: template
                            value_template: >-
                              {{ ('bypass_auto_off_enabled_on' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_off' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_stop' in
                              include_bypass_auto_off) }}
                        then:
                          - alias: >-
                              Wait the number of minutes set in the by-pass auto
                              off time delay
                            delay:
                              minutes: 60
                          - alias: Parallel Actions for the by-pass auto off
                            parallel:
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_on' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_on' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_off' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_off' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_stop' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_stop' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                      - stop: Stop the automation
      - alias: Parallel actions for dynamic lighting and normal lights
        parallel:
          - sequence:
              - alias: Check if the dynamic lighting is enabled
                condition: and
                conditions:
                  - condition: template
                    value_template: >-
                      {{ include_dynamic_lighting != 'disable_dynamic_lighting'
                      }}
              - choose:
                  - alias: Dynamic Lighting - Input Boolean Helper
                    conditions:
                      - condition: template
                        value_template: "{{ dynamic_lighting_boolean != [] }}"
                    sequence:
                      - alias: Turn on the boolean for dynamic lighting
                        service: input_boolean.turn_on
                        data:
                          entity_id: []
              - choose:
                  - alias: 1 - Dynamic Lighting - Lux Controlled Brightness
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_lux_controled_brightness'}}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_brightness_pct: >
                                  {% set lux =
                                  states(dynamic_lighting_lux_sensor) | float %}
                                  {% set slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_max_lux -
                                  dynamic_lighting_min_lux) %} {% set ak = ((
                                  slope * dynamic_lighting_min_lux) * -1) +
                                  dynamic_lighting_max_brightness %} {% set le =
                                  light_entities %} {% set lec = expand(le) |
                                  map(attribute='entity_id') | list | length %}
                                  {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% if lux <=
                                  dynamic_lighting_min_lux %}
                                    {% set bv = dynamic_lighting_max_brightness %}
                                  {% elif lux >= dynamic_lighting_max_lux %}
                                    {% set bv = dynamic_lighting_min_brightness %}
                                  {% else %}
                                    {% set bv = ((slope * lux) + ak) | round(1) %}
                                  {% endif %} {% if lp <= 0 %}
                                    {% set bv = bv %}
                                  {% elif (bv > lp) and
                                  (dynamic_lighting_max_brightness - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = dynamic_lighting_max_brightness %}
                                  {% elif (lp > bv) and (lp -
                                  dynamic_lighting_min_brightness) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = dynamic_lighting_min_brightness %}
                                  {% elif (bv > lp) and (bv - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = lp %}
                                  {% elif (lp > bv) and (lp - bv) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = lp %}
                                  {% elif bv > (lp +
                                  dynamic_lighting_step_value) %}
                                    {% set bv = lp + dynamic_lighting_step_value %}
                                  {% elif bv < (lp -
                                  dynamic_lighting_step_value) %}
                                    {% set bv = lp - dynamic_lighting_step_value %}
                                  {% endif %} {{ bv | round(0) }}
                                in_dead_zone: >
                                  {% set lux =
                                  states(dynamic_lighting_lux_sensor) | float %}
                                  {% set slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_max_lux -
                                  dynamic_lighting_min_lux) %} {% set ak = ((
                                  slope * dynamic_lighting_min_lux) * -1) +
                                  dynamic_lighting_max_brightness %} {% set le =
                                  light_entities %} {% set lec = expand(le) |
                                  map(attribute='entity_id') | list | length %}
                                  {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% if lux <=
                                  dynamic_lighting_min_lux %}
                                    {% set bv = dynamic_lighting_max_brightness %}
                                  {% elif lux >= dynamic_lighting_max_lux %}
                                    {% set bv = dynamic_lighting_min_brightness %}
                                  {% else %}
                                    {% set bv = ((slope * lux) + ak) | round(1) %}
                                  {% endif %} {% if (bv > lp) and
                                  (dynamic_lighting_max_brightness - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    false
                                  {% elif (lp > bv) and (lp -
                                  dynamic_lighting_min_brightness) <=
                                  dynamic_lighting_dead_zone %}
                                    false
                                  {% elif (bv >= lp) and (bv - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    true
                                  {% elif (lp >= bv) and (lp - bv) <=
                                  dynamic_lighting_dead_zone %}
                                    true
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If dynamic lighting brightness is in the
                                    dead zone
                                  conditions:
                                    - condition: template
                                      value_template: "{{ in_dead_zone }}"
                                  sequence:
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the transition and dynamic lighting
                                    brightness for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness') and
                                        ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the transition, dynamic lighting
                                    brightness and colour temperature for the
                                    normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness') and
                                        ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the dynamic lighting brightness for the
                                    normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness') and
                                        ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the dynamic lighting brightness and
                                    colour temperature for the normal lights
                                    switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness') and
                                        ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
              - choose:
                  - alias: >-
                      2 - Dynamic Lighting - Lux Controlled Brightness -
                      Inverted
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_lux_controled_brightness_inv'}}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_brightness_pct: >
                                  {% set lux =
                                  states(dynamic_lighting_lux_sensor) | float %}
                                  {% set slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_min_lux -
                                  dynamic_lighting_max_lux) %} {% set ak = ((
                                  slope * dynamic_lighting_min_lux) * -1) +
                                  dynamic_lighting_min_brightness %} {% set le =
                                  light_entities %} {% set lec = expand(le) |
                                  map(attribute='entity_id') | list | length %}
                                  {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% if lux <=
                                  dynamic_lighting_min_lux %}
                                    {% set bv = dynamic_lighting_min_brightness %}
                                  {% elif lux >= dynamic_lighting_max_lux %}
                                    {% set bv = dynamic_lighting_max_brightness %}
                                  {% else %}
                                    {% set bv = ((slope * lux) + ak) | round(1) %}
                                  {% endif %} {% if lp <= 0 %}
                                    {% set bv = bv %}
                                  {% elif (bv > lp) and
                                  (dynamic_lighting_max_brightness - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = dynamic_lighting_max_brightness %}
                                  {% elif (lp > bv) and (lp -
                                  dynamic_lighting_min_brightness) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = dynamic_lighting_min_brightness %}
                                  {% elif (bv > lp) and (bv - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = lp %}
                                  {% elif (lp > bv) and  (lp - bv) <=
                                  dynamic_lighting_dead_zone %}
                                    {% set bv = lp %}
                                  {% elif bv > (lp +
                                  dynamic_lighting_step_value) %}
                                    {% set bv = lp + dynamic_lighting_step_value %}
                                  {% elif bv < (lp -
                                  dynamic_lighting_step_value) %}
                                    {% set bv = lp - dynamic_lighting_step_value %}
                                  {% endif %} {{ bv | round(0) }}
                                in_dead_zone: >
                                  {% set lux =
                                  states(dynamic_lighting_lux_sensor) | float %}
                                  {% set slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_min_lux -
                                  dynamic_lighting_max_lux) %} {% set ak = ((
                                  slope * dynamic_lighting_min_lux) * -1) +
                                  dynamic_lighting_min_brightness %} {% set le =
                                  light_entities %} {% set lec = expand(le) |
                                  map(attribute='entity_id') | list | length %}
                                  {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% if lux <=
                                  dynamic_lighting_min_lux %}
                                    {% set bv = dynamic_lighting_min_brightness %}
                                  {% elif lux >= dynamic_lighting_max_lux %}
                                    {% set bv = dynamic_lighting_max_brightness %}
                                  {% else %}
                                    {% set bv = ((slope * lux) + ak) | round(1) %}
                                  {% endif %} {% if (bv > lp) and
                                  (dynamic_lighting_max_brightness - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    true
                                  {% elif (lp > bv) and (lp -
                                  dynamic_lighting_min_brightness) <=
                                  dynamic_lighting_dead_zone %}
                                    false
                                  {% elif (bv >= lp) and (bv - lp) <=
                                  dynamic_lighting_dead_zone %}
                                    true
                                  {% elif (lp >= bv) and (lp - bv) <=
                                  dynamic_lighting_dead_zone %}
                                    true
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If dynamic lighting brightness is in the
                                    dead zone
                                  conditions:
                                    - condition: template
                                      value_template: "{{ in_dead_zone }}"
                                  sequence:
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the transition and dynamic lighting
                                    brightness for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness_inv')
                                        and ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the transition, dynamic lighting
                                    brightness and colour temperature for the
                                    normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness_inv')
                                        and ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the dynamic lighting brightness for the
                                    normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness_inv')
                                        and ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
                                - alias: >-
                                    Set the dynamic lighting brightness and
                                    colour temperature for the normal lights
                                    switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_lux_controled_brightness_inv')
                                        and ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Dynamic lighting heartbeat
                                      delay:
                                        minutes: 1
              - choose:
                  - alias: >-
                      3 - Dynamic Lighting - Sun Elevation Lighting - Colour
                      Temp
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_sun_elevation_colour' }}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_kelvin: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_min_colour_temp -
                                  dynamic_lighting_max_colour_temp) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_colour_temp %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_colour_temp -
                                  dynamic_lighting_max_colour_temp) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_colour_temp %} {%
                                  if elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set colour_temp_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set colour_temp_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                    {% else %}
                                      {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                    {% endif %}
                                  {% else %}
                                    {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                  {% endif %} {{ colour_temp_value | round(0) }}
                                should_wait: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% if
                                  expand(light_entities) | selectattr('state',
                                  '==', 'on') | list | count > 0 %}
                                    {% if elevation >= (dynamic_lighting_sun_elevation_start_rising - 2) and elevation <= (dynamic_lighting_sun_elevation_end_rising + 2) and is_state_attr('sun.sun', 'rising', true) %}
                                      false
                                    {% elif elevation <= (dynamic_lighting_sun_elevation_start_falling + 2) and elevation >= (dynamic_lighting_sun_elevation_end_falling - 2) and is_state_attr('sun.sun', 'rising', false) %}
                                      false
                                    {% elif elevation >= (dynamic_lighting_sun_elevation_end_rising + 2) and elevation >= (dynamic_lighting_sun_elevation_start_falling - 2)  %}
                                      true
                                    {% elif elevation <= (dynamic_lighting_sun_elevation_start_rising - 2) and is_state_attr('sun.sun', 'rising', true) %}
                                      true
                                    {% elif elevation <= (dynamic_lighting_sun_elevation_end_falling - 2) and is_state_attr('sun.sun', 'rising', false) %}
                                      true
                                    {% else %}
                                      true
                                    {% endif %}
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If sun elevation is outside the adjustment
                                    zone and the lights are ON
                                  conditions:
                                    - condition: template
                                      value_template: "{{ should_wait }}"
                                  sequence:
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition and dynamic sun elevation
                                    colour temperature for the normal lights
                                    switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        ('use_brightness' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour') }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition, lighting brightness and
                                    dynamic sun elevation colour temperature for
                                    the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        ('use_brightness' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour') }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ brightness_value }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation colour
                                    temperature for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        ('use_brightness' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour') }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the lighting brightness and dynamic sun
                                    elevation colour temperature for the normal
                                    lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        ('use_brightness' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour') }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ brightness_value }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
              - choose:
                  - alias: 4 - Dynamic Lighting - Sun Elevation Lighting - Brightness
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_sun_elevation_brightness' }}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_brightness_pct: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_brightness %} {% if
                                  elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_min_brightness %}
                                  {% endif %} {{ brightness_value | round(0) }}
                                should_wait: >
                                  {% set le = light_entities %} {% set lec =
                                  expand(le) | map(attribute='entity_id') | list
                                  | length %} {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% set elevation =
                                  state_attr('sun.sun', 'elevation') | float %}
                                  {% set start_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_brightness %} {% if
                                  elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_min_brightness %}
                                  {% endif %} {% if expand(light_entities) |
                                  selectattr('state', '==', 'on') | list | count
                                  > 0 %}
                                    {% if (brightness_value >= (lp * 0.99) and brightness_value <= (lp * 1.01)) %}
                                      true
                                    {% else %}
                                      false
                                    {% endif %}
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If lights are ON and the lights are within
                                    1% of the actual brightness
                                  conditions:
                                    - condition: template
                                      value_template: "{{ should_wait }}"
                                  sequence:
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition and dynamic sun elevation
                                    lighting brightness for the normal lights
                                    switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness') and
                                        ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition, dynamic sun elevation
                                    lighting brightness and colour temperature
                                    for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness') and
                                        ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation lighting
                                    brightness for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness') and
                                        ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation lighting
                                    brightness and colour temperature for the
                                    normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness') and
                                        ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
              - choose:
                  - alias: >-
                      5 - Dynamic Lighting - Sun Elevation Lighting - Brightness
                      Inverted
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_sun_elevation_brightness_inv' }}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_brightness_pct: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_min_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_max_brightness %} {% if
                                  elevation > -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_max_brightness %}
                                  {% endif %} {{ brightness_value | round(0) }}
                                should_wait: >
                                  {% set le = light_entities %} {% set lec =
                                  expand(le) | map(attribute='entity_id') | list
                                  | length %} {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% set elevation =
                                  state_attr('sun.sun', 'elevation') | float %}
                                  {% set start_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_min_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_max_brightness %} {% if
                                  elevation > -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_max_brightness %}
                                  {% endif %} {% if expand(light_entities) |
                                  selectattr('state', '==', 'on') | list | count
                                  > 0 %}
                                    {% if (brightness_value >= (lp * 0.99) and brightness_value <= (lp * 1.01)) %}
                                      true
                                    {% else %}
                                      false
                                    {% endif %}
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If lights are ON and the lights are within
                                    1% of the actual brightness
                                  conditions:
                                    - condition: template
                                      value_template: "{{ should_wait }}"
                                  sequence:
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition and dynamic sun elevation
                                    lighting brightness inverted for the normal
                                    lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness_inv')
                                        and ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition, dynamic sun elevation
                                    lighting brightness inverted and colour
                                    temperature for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness_inv')
                                        and ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation lighting
                                    brightness inverted for the normal lights
                                    switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness_inv')
                                        and ('use_colour_temperature' not in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation lighting
                                    brightness inverted and colour temperature
                                    for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_brightness_inv')
                                        and ('use_colour_temperature' in
                                        include_light_control) }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{temperature_value}}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
              - choose:
                  - alias: >-
                      6 - Dynamic Lighting - Sun Elevation Lighting - Colour
                      Temp + Brightness
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_sun_elevation_colour_brightness' }}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_kelvin: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_min_colour_temp -
                                  dynamic_lighting_max_colour_temp) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_colour_temp %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_colour_temp -
                                  dynamic_lighting_max_colour_temp) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_colour_temp %} {%
                                  if elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set colour_temp_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set colour_temp_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                    {% else %}
                                      {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                    {% endif %}
                                  {% else %}
                                    {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                  {% endif %} {{ colour_temp_value | round(0) }}
                                dynamic_brightness_pct: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_brightness %} {% if
                                  elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_min_brightness %}
                                  {% endif %} {{ brightness_value | round(0) }}
                                should_wait: >
                                  {% set le = light_entities %} {% set lec =
                                  expand(le) | map(attribute='entity_id') | list
                                  | length %} {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% set elevation =
                                  state_attr('sun.sun', 'elevation') | float %}
                                  {% set start_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_brightness -
                                  dynamic_lighting_max_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_brightness %} {% if
                                  elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_min_brightness %}
                                  {% endif %} {% if expand(light_entities) |
                                  selectattr('state', '==', 'on') | list | count
                                  > 0 %}
                                    {% if (brightness_value >= (lp * 0.99) and brightness_value <= (lp * 1.01)) %}
                                      true
                                    {% else %}
                                      false
                                    {% endif %}
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If lights are ON and the lights are within
                                    1% of the actual brightness
                                  conditions:
                                    - condition: template
                                      value_template: "{{ should_wait }}"
                                  sequence:
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition, dynamic sun elevation
                                    lighting brightness and dynamic sun
                                    elevation colour temperature for the normal
                                    lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour_brightness')
                                        }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation lighting
                                    brightness and dynamic sun elevation colour
                                    temperature for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour_brightness')
                                        }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
              - choose:
                  - alias: >-
                      7 - Dynamic Lighting - Sun Elevation Lighting - Colour
                      Temp + Brightness Inverted
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_sun_elevation_colour_brightness_inv' }}
                    sequence:
                      - alias: Dynamic Lighting Control
                        repeat:
                          until:
                            - condition: template
                              value_template: >-
                                {{ ((dynamic_lighting_boolean == []) and
                                (expand(light_entities) | selectattr('state',
                                '==', 'off') | list | count > 0)) or
                                ((dynamic_lighting_boolean != []) and
                                (is_state(dynamic_lighting_boolean, 'off'))) }}
                          sequence:
                            - variables:
                                dynamic_kelvin: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_min_colour_temp -
                                  dynamic_lighting_max_colour_temp) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_max_colour_temp %} {%
                                  set end_slope =
                                  (dynamic_lighting_min_colour_temp -
                                  dynamic_lighting_max_colour_temp) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_min_colour_temp %} {%
                                  if elevation >= -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set colour_temp_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set colour_temp_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                    {% else %}
                                      {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                    {% endif %}
                                  {% else %}
                                    {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                  {% endif %} {{ colour_temp_value | round(0) }}
                                dynamic_brightness_pct: >
                                  {% set elevation = state_attr('sun.sun',
                                  'elevation') | float %} {% set start_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_min_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_max_brightness %} {% if
                                  elevation > -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_max_brightness %}
                                  {% endif %} {{ brightness_value | round(0) }}
                                should_wait: >
                                  {% set le = light_entities %} {% set lec =
                                  expand(le) | map(attribute='entity_id') | list
                                  | length %} {% set lp = (expand(le) |
                                  map(attribute='attributes.brightness') |
                                  reject('equalto', None) | sum |
                                  float(default=255) / 255 * 100 / lec) |
                                  round(0) %} {% set elevation =
                                  state_attr('sun.sun', 'elevation') | float %}
                                  {% set start_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_start_rising -
                                  dynamic_lighting_sun_elevation_end_rising) %}
                                  {% set start_ak = (( start_slope *
                                  dynamic_lighting_sun_elevation_end_rising) *
                                  -1) + dynamic_lighting_min_brightness %} {%
                                  set end_slope =
                                  (dynamic_lighting_max_brightness -
                                  dynamic_lighting_min_brightness) /
                                  (dynamic_lighting_sun_elevation_end_falling -
                                  dynamic_lighting_sun_elevation_start_falling)
                                  %} {% set end_ak = (( end_slope *
                                  dynamic_lighting_sun_elevation_end_falling) *
                                  -1) + dynamic_lighting_max_brightness %} {% if
                                  elevation > -10 %}
                                    {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                    {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                      {% set brightness_value = dynamic_lighting_max_brightness %}
                                    {% else %}
                                      {% set brightness_value = dynamic_lighting_min_brightness %}
                                    {% endif %}
                                  {% else %}
                                    {% set brightness_value = dynamic_lighting_max_brightness %}
                                  {% endif %} {% if expand(light_entities) |
                                  selectattr('state', '==', 'on') | list | count
                                  > 0 %}
                                    {% if (brightness_value >= (lp * 0.99) and brightness_value <= (lp * 1.01)) %}
                                      true
                                    {% else %}
                                      false
                                    {% endif %}
                                  {% else %}
                                    false
                                  {% endif %}
                            - choose:
                                - alias: >-
                                    If lights are ON and the lights are within
                                    1% of the actual brightness
                                  conditions:
                                    - condition: template
                                      value_template: "{{ should_wait }}"
                                  sequence:
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the transition, dynamic sun elevation
                                    lighting brightness and dynamic sun
                                    elevation colour temperature for the normal
                                    lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour_brightness_inv')
                                        }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        transition: "{{ transition_on_value }}"
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
                                - alias: >-
                                    Set the dynamic sun elevation lighting
                                    brightness and dynamic sun elevation colour
                                    temperature for the normal lights switch
                                  conditions:
                                    - condition: template
                                      value_template: >-
                                        {{ ('use_transition' not in
                                        include_light_control) and
                                        (include_dynamic_lighting ==
                                        'enable_sun_elevation_colour_brightness_inv')
                                        }}
                                  sequence:
                                    - service: light.turn_on
                                      target:
                                        entity_id: "{{ light_entities }}"
                                      data:
                                        brightness_pct: "{{ dynamic_brightness_pct }}"
                                        color_temp_kelvin: "{{ dynamic_kelvin }}"
                                    - alias: Wait for sun elevation to change
                                      wait_for_trigger:
                                        - platform: state
                                          entity_id: sun.sun
                                          attribute: elevation
              - choose:
                  - alias: >-
                      8 - Dynamic Lighting - Sun Elevation Lighting - Colour
                      Temp + Lux Controlled Brightness
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ include_dynamic_lighting ==
                          'enable_sun_elevation_colour_lux_brightness' }}
                    sequence:
                      - alias: Parallel actions for dynamic lighting
                        parallel:
                          - sequence:
                              - alias: Dynamic Lighting Control
                                repeat:
                                  until:
                                    - condition: template
                                      value_template: >-
                                        {{ ((dynamic_lighting_boolean == []) and
                                        (expand(light_entities) |
                                        selectattr('state', '==', 'off') | list
                                        | count > 0)) or
                                        ((dynamic_lighting_boolean != []) and
                                        (is_state(dynamic_lighting_boolean,
                                        'off'))) }}
                                  sequence:
                                    - variables:
                                        dynamic_brightness_pct: >
                                          {% set lux =
                                          states(dynamic_lighting_lux_sensor) |
                                          float %} {% set slope =
                                          (dynamic_lighting_min_brightness -
                                          dynamic_lighting_max_brightness) /
                                          (dynamic_lighting_max_lux -
                                          dynamic_lighting_min_lux) %} {% set ak =
                                          (( slope * dynamic_lighting_min_lux) *
                                          -1) + dynamic_lighting_max_brightness %}
                                          {% set le = light_entities %} {% set lec
                                          = expand(le) |
                                          map(attribute='entity_id') | list |
                                          length %} {% set lp = (expand(le) |
                                          map(attribute='attributes.brightness') |
                                          reject('equalto', None) | sum |
                                          float(default=255) / 255 * 100 / lec) |
                                          round(0) %} {% if lux <=
                                          dynamic_lighting_min_lux %}
                                            {% set bv = dynamic_lighting_max_brightness %}
                                          {% elif lux >= dynamic_lighting_max_lux
                                          %}
                                            {% set bv = dynamic_lighting_min_brightness %}
                                          {% else %}
                                            {% set bv = ((slope * lux) + ak) | round(1) %}
                                          {% endif %} {% if lp <= 0 %}
                                            {% set bv = bv %}
                                          {% elif (bv > lp) and
                                          (dynamic_lighting_max_brightness - lp)
                                          <= dynamic_lighting_dead_zone %}
                                            {% set bv = dynamic_lighting_max_brightness %}
                                          {% elif (lp > bv) and (lp -
                                          dynamic_lighting_min_brightness) <=
                                          dynamic_lighting_dead_zone %}
                                            {% set bv = dynamic_lighting_min_brightness %}
                                          {% elif (bv > lp) and (bv - lp) <=
                                          dynamic_lighting_dead_zone %}
                                            {% set bv = lp %}
                                          {% elif (lp > bv) and (lp - bv) <=
                                          dynamic_lighting_dead_zone %}
                                            {% set bv = lp %}
                                          {% elif bv > (lp +
                                          dynamic_lighting_step_value) %}
                                            {% set bv = lp + dynamic_lighting_step_value %}
                                          {% elif bv < (lp -
                                          dynamic_lighting_step_value) %}
                                            {% set bv = lp - dynamic_lighting_step_value %}
                                          {% endif %} {{ bv | round(0) }}
                                        dynamic_kelvin: >
                                          {% if expand(light_entities) |
                                          selectattr('state', '==', 'off') | list
                                          | count > 0 %}
                                            {% set elevation = state_attr('sun.sun', 'elevation') | float %}
                                            {% set start_slope = (dynamic_lighting_min_colour_temp - dynamic_lighting_max_colour_temp) / (dynamic_lighting_sun_elevation_start_rising - dynamic_lighting_sun_elevation_end_rising) %}
                                            {% set start_ak = (( start_slope * dynamic_lighting_sun_elevation_end_rising) * -1) + dynamic_lighting_max_colour_temp %}
                                            {% set end_slope = (dynamic_lighting_min_colour_temp - dynamic_lighting_max_colour_temp) / (dynamic_lighting_sun_elevation_end_falling - dynamic_lighting_sun_elevation_start_falling) %}
                                            {% set end_ak = (( end_slope * dynamic_lighting_sun_elevation_end_falling) * -1) + dynamic_lighting_min_colour_temp %}
                                            {% if elevation >= -10 %}
                                              {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                                {% set colour_temp_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                              {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                                {% set colour_temp_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                              {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                                {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                              {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                                {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                              {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                                {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                              {% else %}
                                                {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                              {% endif %}
                                            {% else %}
                                              {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                            {% endif %}
                                            {{ colour_temp_value | round(0) }}
                                          {% endif %}
                                        in_dead_zone: >
                                          {% set lux =
                                          states(dynamic_lighting_lux_sensor) |
                                          float %} {% set slope =
                                          (dynamic_lighting_min_brightness -
                                          dynamic_lighting_max_brightness) /
                                          (dynamic_lighting_max_lux -
                                          dynamic_lighting_min_lux) %} {% set ak =
                                          (( slope * dynamic_lighting_min_lux) *
                                          -1) + dynamic_lighting_max_brightness %}
                                          {% set le = light_entities %} {% set lec
                                          = expand(le) |
                                          map(attribute='entity_id') | list |
                                          length %} {% set lp = (expand(le) |
                                          map(attribute='attributes.brightness') |
                                          reject('equalto', None) | sum |
                                          float(default=255) / 255 * 100 / lec) |
                                          round(0) %} {% if lux <=
                                          dynamic_lighting_min_lux %}
                                            {% set bv = dynamic_lighting_max_brightness %}
                                          {% elif lux >= dynamic_lighting_max_lux
                                          %}
                                            {% set bv = dynamic_lighting_min_brightness %}
                                          {% else %}
                                            {% set bv = ((slope * lux) + ak) | round(1) %}
                                          {% endif %} {% if (bv > lp) and
                                          (dynamic_lighting_max_brightness - lp)
                                          <= dynamic_lighting_dead_zone %}
                                            false
                                          {% elif (lp > bv) and (lp -
                                          dynamic_lighting_min_brightness) <=
                                          dynamic_lighting_dead_zone %}
                                            false
                                          {% elif (bv >= lp) and (bv - lp) <=
                                          dynamic_lighting_dead_zone %}
                                            true
                                          {% elif (lp >= bv) and (lp - bv) <=
                                          dynamic_lighting_dead_zone %}
                                            true
                                          {% else %}
                                            false
                                          {% endif %}
                                    - choose:
                                        - alias: Check if the light is off
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ expand(light_entities) |
                                                selectattr('state', '==', 'off') | list
                                                | count > 0 }}
                                          sequence:
                                            - alias: >-
                                                Delay for parallel actions needed for
                                                when the light is off
                                              delay:
                                                milliseconds: 100
                                    - choose:
                                        - alias: >-
                                            If dynamic lighting brightness is in the
                                            dead zone
                                          conditions:
                                            - condition: template
                                              value_template: "{{ in_dead_zone }}"
                                          sequence:
                                            - alias: Dynamic lighting heartbeat
                                              delay:
                                                minutes: 1
                                        - alias: >-
                                            Set the transition, dynamic lighting lux
                                            brightness and dynamic sun elevation
                                            colour temperature for the normal lights
                                            switch
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ ('use_transition' in
                                                include_light_control) and
                                                (include_dynamic_lighting ==
                                                'enable_sun_elevation_colour_lux_brightness')
                                                }}
                                            - condition: template
                                              value_template: >-
                                                {{ expand(light_entities) |
                                                selectattr('state', '==', 'off') | list
                                                | count > 0 }}
                                          sequence:
                                            - service: light.turn_on
                                              target:
                                                entity_id: "{{ light_entities }}"
                                              data:
                                                transition: "{{ transition_on_value }}"
                                                brightness_pct: "{{ dynamic_brightness_pct }}"
                                                color_temp_kelvin: "{{ dynamic_kelvin }}"
                                            - alias: Dynamic lighting heartbeat
                                              delay:
                                                minutes: 1
                                        - alias: >-
                                            Set the dynamic lighting lux brightness
                                            and dynamic sun elevation colour
                                            temperature for the normal lights switch
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ ('use_transition' not in
                                                include_light_control) and
                                                (include_dynamic_lighting ==
                                                'enable_sun_elevation_colour_lux_brightness')
                                                }}
                                            - condition: template
                                              value_template: >-
                                                {{ expand(light_entities) |
                                                selectattr('state', '==', 'off') | list
                                                | count > 0 }}
                                          sequence:
                                            - service: light.turn_on
                                              target:
                                                entity_id: "{{ light_entities }}"
                                              data:
                                                brightness_pct: "{{ dynamic_brightness_pct }}"
                                                color_temp_kelvin: "{{ dynamic_kelvin }}"
                                            - alias: Dynamic lighting heartbeat
                                              delay:
                                                minutes: 1
                                        - alias: >-
                                            Set the transition, dynamic lighting lux
                                            brightness and dynamic sun elevation
                                            colour temperature for the normal lights
                                            switch
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ ('use_transition' in
                                                include_light_control) and
                                                (include_dynamic_lighting ==
                                                'enable_sun_elevation_colour_lux_brightness')
                                                }}
                                          sequence:
                                            - service: light.turn_on
                                              target:
                                                entity_id: "{{ light_entities }}"
                                              data:
                                                transition: "{{ transition_on_value }}"
                                                brightness_pct: "{{ dynamic_brightness_pct }}"
                                            - alias: Dynamic lighting heartbeat
                                              delay:
                                                minutes: 1
                                        - alias: >-
                                            Set the dynamic lighting lux brightness
                                            and dynamic sun elevation colour
                                            temperature for the normal lights switch
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ ('use_transition' not in
                                                include_light_control) and
                                                (include_dynamic_lighting ==
                                                'enable_sun_elevation_colour_lux_brightness')
                                                }}
                                          sequence:
                                            - service: light.turn_on
                                              target:
                                                entity_id: "{{ light_entities }}"
                                              data:
                                                brightness_pct: "{{ dynamic_brightness_pct }}"
                                            - alias: Dynamic lighting heartbeat
                                              delay:
                                                minutes: 1
                          - sequence:
                              - alias: Dynamic Lighting Control
                                repeat:
                                  until:
                                    - condition: template
                                      value_template: >-
                                        {{ ((dynamic_lighting_boolean == []) and
                                        (expand(light_entities) |
                                        selectattr('state', '==', 'off') | list
                                        | count > 0)) or
                                        ((dynamic_lighting_boolean != []) and
                                        (is_state(dynamic_lighting_boolean,
                                        'off'))) }}
                                  sequence:
                                    - variables:
                                        dynamic_kelvin: >
                                          {% set elevation = state_attr('sun.sun',
                                          'elevation') | float %} {% set
                                          start_slope =
                                          (dynamic_lighting_min_colour_temp -
                                          dynamic_lighting_max_colour_temp) /
                                          (dynamic_lighting_sun_elevation_start_rising
                                          -
                                          dynamic_lighting_sun_elevation_end_rising)
                                          %} {% set start_ak = (( start_slope *
                                          dynamic_lighting_sun_elevation_end_rising)
                                          * -1) + dynamic_lighting_max_colour_temp
                                          %} {% set end_slope =
                                          (dynamic_lighting_min_colour_temp -
                                          dynamic_lighting_max_colour_temp) /
                                          (dynamic_lighting_sun_elevation_end_falling
                                          -
                                          dynamic_lighting_sun_elevation_start_falling)
                                          %} {% set end_ak = (( end_slope *
                                          dynamic_lighting_sun_elevation_end_falling)
                                          * -1) + dynamic_lighting_min_colour_temp
                                          %} {% if elevation >= -10 %}
                                            {% if elevation >= dynamic_lighting_sun_elevation_start_rising and elevation <= dynamic_lighting_sun_elevation_end_rising and is_state_attr('sun.sun', 'rising', true) %}
                                              {% set colour_temp_value = ((start_slope * elevation) + start_ak) | round(1) %}
                                            {% elif elevation <= dynamic_lighting_sun_elevation_start_falling and elevation >= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                              {% set colour_temp_value = ((end_slope * elevation) + end_ak) | round(1) %}
                                            {% elif elevation >= dynamic_lighting_sun_elevation_end_rising and elevation >= dynamic_lighting_sun_elevation_start_falling  %}
                                              {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                            {% elif elevation <= dynamic_lighting_sun_elevation_start_rising and is_state_attr('sun.sun', 'rising', true) %}
                                              {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                            {% elif elevation <= dynamic_lighting_sun_elevation_end_falling and is_state_attr('sun.sun', 'rising', false) %}
                                              {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                            {% else %}
                                              {% set colour_temp_value = dynamic_lighting_max_colour_temp %}
                                            {% endif %}
                                          {% else %}
                                            {% set colour_temp_value = dynamic_lighting_min_colour_temp %}
                                          {% endif %} {{ colour_temp_value |
                                          round(0) }}
                                        should_wait: >
                                          {% set elevation = state_attr('sun.sun',
                                          'elevation') | float %} {% if
                                          expand(light_entities) |
                                          selectattr('state', '==', 'on') | list |
                                          count > 0 %}
                                            {% if elevation >= (dynamic_lighting_sun_elevation_start_rising - 2) and elevation <= (dynamic_lighting_sun_elevation_end_rising + 2) and is_state_attr('sun.sun', 'rising', true) %}
                                              false
                                            {% elif elevation <= (dynamic_lighting_sun_elevation_start_falling + 2) and elevation >= (dynamic_lighting_sun_elevation_end_falling - 2) and is_state_attr('sun.sun', 'rising', false) %}
                                              false
                                            {% elif elevation >= (dynamic_lighting_sun_elevation_end_rising + 2) and elevation >= (dynamic_lighting_sun_elevation_start_falling - 2)  %}
                                              true
                                            {% elif elevation <= (dynamic_lighting_sun_elevation_start_rising - 2) and is_state_attr('sun.sun', 'rising', true) %}
                                              true
                                            {% elif elevation <= (dynamic_lighting_sun_elevation_end_falling - 2) and is_state_attr('sun.sun', 'rising', false) %}
                                              true
                                            {% else %}
                                              true
                                            {% endif %}
                                          {% else %}
                                            false
                                          {% endif %}
                                    - choose:
                                        - alias: >-
                                            If sun elevation is outside the
                                            adjustment zone and the lights are ON
                                          conditions:
                                            - condition: template
                                              value_template: "{{ should_wait }}"
                                          sequence:
                                            - alias: Wait for sun elevation to change
                                              wait_for_trigger:
                                                - platform: state
                                                  entity_id: sun.sun
                                                  attribute: elevation
                                        - alias: >-
                                            If sun elevation is outside the
                                            adjustment zone and the lights are ON
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ expand(light_entities) |
                                                selectattr('state', '==', 'off') | list
                                                | count > 0 }}
                                          sequence:
                                            - alias: Wait for sun elevation to change
                                              wait_for_trigger:
                                                - platform: state
                                                  entity_id: sun.sun
                                                  attribute: elevation
                                        - alias: >-
                                            Set the transition, dynamic lighting lux
                                            brightness and dynamic sun elevation
                                            colour temperature for the normal lights
                                            switch
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ ('use_transition' in
                                                include_light_control) and
                                                (include_dynamic_lighting ==
                                                'enable_sun_elevation_colour_lux_brightness')
                                                }}
                                          sequence:
                                            - service: light.turn_on
                                              target:
                                                entity_id: "{{ light_entities }}"
                                              data:
                                                transition: "{{ transition_on_value }}"
                                                color_temp_kelvin: "{{ dynamic_kelvin }}"
                                            - alias: Wait for sun elevation to change
                                              wait_for_trigger:
                                                - platform: state
                                                  entity_id: sun.sun
                                                  attribute: elevation
                                        - alias: >-
                                            Set the dynamic lighting lux brightness
                                            and dynamic sun elevation colour
                                            temperature for the normal lights switch
                                          conditions:
                                            - condition: template
                                              value_template: >-
                                                {{ ('use_transition' not in
                                                include_light_control) and
                                                (include_dynamic_lighting ==
                                                'enable_sun_elevation_colour_lux_brightness')
                                                }}
                                          sequence:
                                            - service: light.turn_on
                                              target:
                                                entity_id: "{{ light_entities }}"
                                              data:
                                                color_temp_kelvin: "{{ dynamic_kelvin }}"
                                            - alias: Wait for sun elevation to change
                                              wait_for_trigger:
                                                - platform: state
                                                  entity_id: sun.sun
                                                  attribute: elevation
              - stop: Stop the automation
          - sequence:
              - choose:
                  - alias: Set the transition for the normal lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' in include_light_control) and
                          ('use_brightness' not in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' not in
                          include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          transition: "{{ transition_on_value }}"
                  - alias: >-
                      Set the transition and brightness for the normal lights
                      switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' in include_light_control) and
                          ('use_brightness' in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' not in
                          include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          transition: "{{ transition_on_value }}"
                          brightness_pct: "{{ brightness_value }}"
                  - alias: >-
                      Set the transition and colour temperature for the normal
                      lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' in include_light_control) and
                          ('use_brightness' not in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' in include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          transition: "{{ transition_on_value }}"
                          color_temp_kelvin: "{{temperature_value}}"
                  - alias: >-
                      Set the transition, brightness and colour temperature for
                      the normal lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' in include_light_control) and
                          ('use_brightness' in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' in include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          transition: "{{ transition_on_value }}"
                          brightness_pct: "{{ brightness_value }}"
                          color_temp_kelvin: "{{temperature_value}}"
                  - alias: Set the brightness for the normal lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' not in include_light_control) and
                          ('use_brightness' in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' not in
                          include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          brightness_pct: "{{ brightness_value }}"
                  - alias: Set the colour temperature for the normal lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' not in include_light_control) and
                          ('use_brightness' not in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' in include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          color_temp_kelvin: "{{temperature_value}}"
                  - alias: >-
                      Set the brightness and colour temperature for the normal
                      lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' not in include_light_control) and
                          ('use_brightness' in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' in include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
                        data:
                          brightness_pct: "{{ brightness_value }}"
                          color_temp_kelvin: "{{temperature_value}}"
                  - alias: Set the default for the normal lights switch
                    conditions:
                      - condition: template
                        value_template: >-
                          {{ ('use_transition' not in include_light_control) and
                          ('use_brightness' not in include_light_control) and
                          (include_dynamic_lighting ==
                          'disable_dynamic_lighting') and
                          ('use_colour_temperature' not in
                          include_light_control) }}
                    sequence:
                      - service: light.turn_on
                        target:
                          entity_id: "{{ light_entities_off }}"
              - choose:
                  - alias: >-
                      Check if normal lights scenes or scripts helper is on -
                      This is for scenes only when crossing over
                    conditions:
                      - condition: template
                        value_template: >-
                          {% if night_boolean_scenes_scripts == [] %}
                            false
                          {% elif is_state(night_boolean_scenes_scripts, 'on')
                          %}
                            true
                          {% else %}
                            false
                          {% endif %}
                    sequence: null
                  - alias: If transition is selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' in include_light_control }}"
                    sequence:
                      - alias: Turn on the scenes
                        service: scene.turn_on
                        target:
                          entity_id: "{{ scene_entities }}"
                        data:
                          transition: "{{ transition_on_value }}"
                      - alias: Turn on the boolean for scenes and scripts
                        service: input_boolean.turn_on
                        data:
                          entity_id: "{{ boolean_scenes_scripts_helper }}"
                  - alias: If transition is not selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' not in include_light_control }}"
                    sequence:
                      - alias: Turn on the scenes
                        service: scene.turn_on
                        target:
                          entity_id: "{{ scene_entities }}"
                      - alias: Turn on the boolean for scenes and scripts
                        service: input_boolean.turn_on
                        data:
                          entity_id: "{{ boolean_scenes_scripts_helper }}"
              - alias: Turn on the switches
                service: switch.turn_on
                target:
                  entity_id: "{{ switch_entities_off }}"
              - alias: Turn on the scripts
                service: script.turn_on
                target:
                  entity_id: "{{ script_entities }}"
              - choose:
                  - alias: By-pass is enabled & check by-pass option - turn lights on
                    conditions:
                      - condition: trigger
                        id: t7_on
                    sequence:
                      - alias: Check by-pass settings and preform the correct action
                        if:
                          - alias: Check if the by-pass auto off is enabled
                            condition: template
                            value_template: >-
                              {{ ('bypass_auto_off_enabled_on' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_off' in
                              include_bypass_auto_off) or
                              ('bypass_auto_off_enabled_stop' in
                              include_bypass_auto_off) }}
                        then:
                          - alias: >-
                              Wait the number of minutes set in the by-pass auto
                              off time delay
                            delay:
                              minutes: 60
                          - alias: Parallel Actions for the by-pass auto off
                            parallel:
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_on' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_on' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_turn_off' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_off' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                              - sequence:
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: >-
                                              {{ ('bypass_enabled_stop' in
                                              include_bypass) and
                                              ('bypass_auto_off_enabled_stop' in
                                              include_bypass_auto_off) }}
                                        sequence:
                                          - alias: Turn off the by-pass
                                            service: homeassistant.turn_off
                                            entity_id: []
                          - stop: Stop the automation
                        else:
                          - stop: Stop the automation
              - choose:
                  - alias: Check if the trigger is on and wait for it to go off
                    conditions:
                      - condition: state
                        entity_id:
                          - binary_sensor.moving_living_room
                        state: "on"
                        match: any
                    sequence:
                      - alias: Wait until motion sensor is off
                        wait_for_trigger:
                          - platform: state
                            entity_id:
                              - binary_sensor.moving_living_room
                            from: "on"
                            to: "off"
              - alias: Wait the number of minutes set in the normal lights time delay
                delay:
                  minutes: 5
              - choose:
                  - alias: Dynamic Lighting - Input Boolean Helper
                    conditions:
                      - condition: template
                        value_template: "{{ dynamic_lighting_boolean != [] }}"
                    sequence:
                      - alias: Turn off the boolean for dynamic lighting
                        service: input_boolean.turn_off
                        data:
                          entity_id: []
              - choose:
                  - alias: If transition is selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' in include_light_control }}"
                    sequence:
                      - alias: Turn off the lights
                        service: light.turn_off
                        target:
                          entity_id: "{{ light_entities }}"
                        data:
                          transition: "{{ transition_off_value }}"
                      - alias: Turn off the scenes
                        service: scene.turn_on
                        data:
                          entity_id: "{{ end_scene_entities }}"
                          transition: "{{ transition_off_value }}"
                  - alias: If transition is not selected
                    conditions:
                      - condition: template
                        value_template: "{{ 'use_transition' not in include_light_control }}"
                    sequence:
                      - alias: Turn off the lights
                        service: light.turn_off
                        target:
                          entity_id: "{{ light_entities }}"
                      - alias: Turn off the scenes
                        service: scene.turn_on
                        data:
                          entity_id: "{{ end_scene_entities }}"
              - alias: Turn off the switches
                service: switch.turn_off
                target:
                  entity_id: "{{ switch_entities }}"
              - alias: Turn off the script
                service: script.turn_on
                data:
                  entity_id: "{{ end_script_entities }}"
              - alias: Turn off the boolean for scenes and scripts
                service: input_boolean.turn_off
                data:
                  entity_id: []
mode: restart
max_exceeded: silent
variables:
  motion_trigger:
    - binary_sensor.moving_living_room
  light_switch:
    entity_id: light.couch_lights_living_room
  boolean_scenes_scripts: []
  end_scenes: []
  time_delay: 5
  include_light_control: []
  light_brightness: 100
  brightness_value: "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}"
  light_colour_temperature: 5000
  temperature_value: >-
    {{ iif ('use_colour_temperature' in include_light_control ,
    light_colour_temperature, [] ) }}
  light_transition_on: 1
  light_transition_off: 1
  transition_on_value: "{{ iif ('use_transition' in include_light_control, light_transition_on, ) }}"
  transition_off_value: >-
    {{ iif ('use_transition' in include_light_control, light_transition_off, )
    }}
  include_dynamic_lighting: disable_dynamic_lighting
  dynamic_lighting_lux_sensor: []
  dynamic_lighting_max_lux: 400
  dynamic_lighting_min_lux: 40
  dynamic_lighting_max_brightness: 100
  dynamic_lighting_min_brightness: 0
  dynamic_lighting_boolean: []
  dynamic_lighting_max_colour_temp: 5000
  dynamic_lighting_min_colour_temp: 3000
  dynamic_lighting_sun_elevation_start_rising: -1.5
  dynamic_lighting_sun_elevation_end_rising: 15
  dynamic_lighting_sun_elevation_start_falling: 15
  dynamic_lighting_sun_elevation_end_falling: -4
  dynamic_lighting_heartbeat: 1
  dynamic_lighting_step_value: 4
  dynamic_lighting_dead_zone: 7
  include_bypass: []
  motion_bypass_lights_on: []
  motion_bypass_lights_off: []
  motion_bypass_lights_stop: []
  bypass_time_delay: 0
  include_bypass_auto_off: []
  bypass_auto_off_delay: 60
  include_sun: sun_enabled
  sun_elevation: -1.5
  sun_elevation_rising: -4
  include_ambient: ambient_enabled
  ambient_light_sensor: sensor.light_living_room
  ambient_light_options: ambient_light_option_disabled
  ambient_light_value: 20
  ambient_light_high_value: 80
  include_time: time_disabled
  after_time: "00:00:00"
  before_time: "00:00:00"
  weekday_options:
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
    - sun
  include_device_tracker: device_tracker_disabled
  zone: []
  people: []
  include_night_lights: night_lights_enabled
  night_lights:
    entity_id: light.atmo_lights_living_room
  night_boolean_scenes_scripts: []
  night_time_delay: 5
  include_night_light_control: []
  night_light_brightness: 10
  night_brightness_value: >-
    {{ iif ('use_brightness' in include_night_light_control ,
    night_light_brightness, ) }}
  night_light_colour_temperature: 5000
  night_temperature_value: >-
    {{ iif ('use_colour_temperature' in include_night_light_control ,
    night_light_colour_temperature, [] ) }}
  night_light_transition_on: 1
  night_light_transition_off: 1
  night_transition_on_value: >-
    {{ iif ('use_transition' in include_night_light_control,
    night_light_transition_on, ) }}
  night_transition_off_value: >-
    {{ iif ('use_transition' in include_night_light_control,
    night_light_transition_off, ) }}
  night_lights_conditions: []
  night_lights_entity_state: []
  night_lights_after_time: "00:00:00"
  night_lights_before_time: "00:00:00"
  night_lights_sun_elevation: -1.5
  night_lights_sun_elevation_rising: -4
  light_entities_off: >-
    {{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') |
    selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}
  switch_entities_off: >-
    {{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') |
    selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}
  light_entities: >-
    {{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') |
    map(attribute='entity_id') | list }}
  switch_entities: >-
    {{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') |
    map(attribute='entity_id') | list }}
  scene_entities: |-
    {% set a = light_switch.entity_id %} {% if boolean_scenes_scripts == [] %}
      {{ expand(a) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}
    {% elif is_state(boolean_scenes_scripts, 'off') %}
      {{ expand(a) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  script_entities: |-
    {% set a = light_switch.entity_id %} {% if boolean_scenes_scripts == [] %}
      {{ expand(a) | selectattr('domain', 'eq', 'script') | map(attribute='entity_id') | list }}
    {% elif is_state(boolean_scenes_scripts, 'off') %}
      {{ expand(a) | selectattr('domain', 'eq', 'script') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  boolean_scenes_scripts_helper: >-
    {% if boolean_scenes_scripts | length > 0 and states(boolean_scenes_scripts)
    == 'off' %}
      {{ boolean_scenes_scripts }}
    {% else %}
      []
    {% endif %}
  end_scene_entities: "{{ end_scenes | select('match', '^scene\\..*') | list }}"
  end_script_entities: "{{ end_scenes | select('match', '^script\\..*') | list }}"
  night_light_entities_off: |-
    {% set b =  night_lights and night_lights.entity_id %} {% if b %}
      {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  night_switch_entities_off: |-
    {% set b =  night_lights and night_lights.entity_id %} {% if b %}
      {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  night_light_entities: |-
    {% set b =  night_lights and night_lights.entity_id %} {% if b %}
      {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  night_switch_entities: |-
    {% set b =  night_lights and night_lights.entity_id %} {% if b %}
      {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  night_scene_entities: >-
    {% set b = night_lights and night_lights.entity_id %} {% if
    night_boolean_scenes_scripts == [] %}
      {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}
    {% elif is_state(night_boolean_scenes_scripts, 'off') %}
      {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  night_script_entities: >-
    {% set b = night_lights and night_lights.entity_id %} {% if
    night_boolean_scenes_scripts == [] %}
      {{ expand(b) | selectattr('domain', 'eq', 'script') | map(attribute='entity_id') | list }}
    {% elif is_state(night_boolean_scenes_scripts, 'off') %}
      {{ expand(b) | selectattr('domain', 'eq', 'script') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  night_boolean_scenes_scripts_helper: >-
    {% if night_boolean_scenes_scripts | length > 0 and
    states(night_boolean_scenes_scripts) == 'off' %}
      {{ night_boolean_scenes_scripts }}
    {% else %}
      []
    {% endif %}
  crossover_lights_light: >-
    {% set a = light_switch.entity_id %} {% set b =  night_lights and
    night_lights.entity_id %} {% if a and b %}
      {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  crossover_lights_switch: >-
    {% set a = light_switch.entity_id %} {% set b =  night_lights and
    night_lights.entity_id %} {% if a and b %}
      {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  crossover_night_lights_light_on: |-
    {% set b =  night_lights and night_lights.entity_id %} {% if b %}
      {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'on') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  crossover_night_lights_light: >-
    {% set a = light_switch.entity_id %} {% set b =  night_lights and
    night_lights.entity_id %} {% if a and b %}
      {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  crossover_night_lights_switch: >-
    {% set a = light_switch.entity_id %} {% set b =  night_lights and
    night_lights.entity_id %} {% if a and b %}
      {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
  crossover_lights_light_on: |-
    {% set a = light_switch.entity_id %} {% if a %}
      {{ expand(a) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'on') | map(attribute='entity_id') | list }}
    {% else %}
      []
    {% endif %}
