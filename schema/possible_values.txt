/* alarm_control_panel 
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/alarm-control-panel
*/
(1  ,       'main',                             'None'),	                        --Unknown state.
(2  ,       'main',                             'disarmed'),	                        --The alarm is disarmed (off).
(3  ,       'main',                             'armed_home'),	                        --The alarm is armed in home mode.
(4  ,       'main',                             'armed_away'),	                        --The alarm is armed in away mode.
(5  ,       'main',                             'armed_night'),	                        --The alarm is armed in night mode.
(6  ,       'main',                             'armed_vacation'),	                --The alarm is armed in vacation mode.
(7  ,       'main',                             'armed_custom_bypass'),                 --The alarm is armed in bypass mode.
(8  ,       'main',                             'pending'),	                        --The alarm is pending (towards triggered).
(9  ,       'main',                             'arming'),	                        --The alarm is arming.
(10 ,       'main',                             'disarming'),	                        --The alarm is disarming.
(11 ,       'main',                             'triggered'),                           --The alarm is triggered.
(12 ,       'main',                             'unknown'),	                        --Unknown state.
(13 ,       'main',                             'unavailable'),                         --The entity is not reachable.
(14 ,       'code_format',                      'number'),                              --The code format of the alarm control panel.
(15 ,       'code_format',                      'text'),                                --The code format of the alarm control panel.
(16 ,       'changed_by',                       'string'),                              --The alarm control panel got changed by a user.
(17 ,       'code_arm_required',                'string'),                              --The code required to arm the alarm control panel.
(18 ,       'supported_features',               'int'),                                 --The count of supported features of the alarm control panel.
/* time
        attribute extracted from: 
        environment_package/automation_dissection.py
*/
(19 ,       'at',                               'string'),                              --Time at which it throws an event
/* binary_sensor 
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/binary-sensor
        https://github.com/home-assistant/core/blob/dev/homeassistant/components/binary_sensor
*/
(20 ,       'main',                             'on'),                                  --The sensor detects something.
(21 ,       'main',                             'off'),                                 --The sensor detects nothing.
(22 ,       'device_class',                     'battery'),                             --The device class of the binary sensor.
(23 ,       'device_class',                     'battery_charging'),                    --The device class of the binary sensor.
(24 ,       'device_class',                     'co'),                                  --The device class of the binary sensor.
(25 ,       'device_class',                     'cold'),                                --The device class of the binary sensor.
(26 ,       'device_class',                     'connectivity'),                        --The device class of the binary sensor.
(27 ,       'device_class',                     'door'),                                --The device class of the binary sensor.
(28 ,       'device_class',                     'garage_door'),                         --The device class of the binary sensor.
(29 ,       'device_class',                     'gas'),                                 --The device class of the binary sensor.
(30 ,       'device_class',                     'heat'),                                --The device class of the binary sensor.
(31 ,       'device_class',                     'light'),                               --The device class of the binary sensor.
(32 ,       'device_class',                     'lock'),                                --The device class of the binary sensor.
(33 ,       'device_class',                     'moisture'),                            --The device class of the binary sensor.
(34 ,       'device_class',                     'motion'),                              --The device class of the binary sensor.
(35 ,       'device_class',                     'moving'),                              --The device class of the binary sensor.
(36 ,       'device_class',                     'occupancy'),                           --The device class of the binary sensor.
(37 ,       'device_class',                     'opening'),                             --The device class of the binary sensor.
(38 ,       'device_class',                     'plug'),                                --The device class of the binary sensor.
(39 ,       'device_class',                     'power'),                               --The device class of the binary sensor.
(40 ,       'device_class',                     'presence'),                            --The device class of the binary sensor.
(41 ,       'device_class',                     'problem'),                             --The device class of the binary sensor.
(42 ,       'device_class',                     'running'),                             --The device class of the binary sensor.
(43 ,       'device_class',                     'safety'),                              --The device class of the binary sensor.
(44 ,       'device_class',                     'smoke'),                               --The device class of the binary sensor.
(45 ,       'device_class',                     'sound'),                               --The device class of the binary sensor.
(46 ,       'device_class',                     'tamper'),                              --The device class of the binary sensor.
(47 ,       'device_class',                     'update'),                              --The device class of the binary sensor.
(48 ,       'device_class',                     'vibration'),                           --The device class of the binary sensor.
(49 ,       'device_class',                     'window'),                              --The device class of the binary sensor.
/* calendar
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/calendar
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/calendar
*/
(50 ,       'description',                      'string'),                              --The calender description.
(51 ,       'message',                          'string'),                              --The calender message.
(52 ,       'all_day',                          'string'),                              --The calender event is all day
(53 ,       'start_time',                       'string'),                              --The calender event start time
(54 ,       'end_time',                         'string'),                              --The calender event end time.
(55 ,       'location',                         'string'),                              --The calender event location.
(56 ,       'event',                            'string'),                              --Triggered with this event
(57 ,       'offset',                           'string'),                              --Offset of the trigger 
/* camera 
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/camera
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/camera

*/
(58 ,       'main',                             'idle'),                                --The camera observes.
(59 ,       'main',                             'recording'),                           --The camera records the recording.
(60 ,       'main',                             'streaming'),                           --The camera streams the recording.
(61 ,       'frontend_stream_type',             'hls'),                                 --The streaming format in the ui of the camera.
(62 ,       'frontend_stream_type',             'web_rtc'),                             --The streaming format in the ui of the camera.
/* climate  
        states(main) / attributes extracted from:
        https://github.com/home-assistant/core/blob/dev/homeassistant/components/climate
        https://www.home-assistant.io/integrations/climate.mqtt/ 
        https://www.home-assistant.io/integrations/climate/
        https://developers.home-assistant.io/docs/core/entity/climate/
*/
(63 ,       'main',                             'auto'),                                --The device is set to a schedule, learned behavior, AI.
(64 ,       'main',                             'cool'),                                --The device is set to cool to a target temperature.
(65 ,       'main',                             'heat'),                                --The device is set to heat to a target temperature.
(66 ,       'main',                             'heat_cool'),                           --The device is set to heat/cool to a target temperature range.
(67 ,       'main',                             'dry'),                                 --The device is set to dry/humidity mode.
(68 ,       'main',                             'fan_only'),                            --The device only has the fan on. No heating or cooling taking place.
(69 ,       'current_humidity',                 'float'),                               --The current humidity.
(70 ,       'current_temperature',              'float'),                               --The current temperature.
(71 ,       'max_humidity',                     'float'),                               --The maximum humidity.
(72 ,       'max_temp',                         'float'),                               --The maximum temperature in temperature_unit.
(73 ,       'min_humidity',                     'float'),                               --The minimum humidity.
(74 ,       'min_temp',                         'float'),                               --The minimum temperature in temperature_unit.
(75 ,       'precision',                        'float'),                               --The precision of the temperature in the system. Defaults to tenths for TEMP_CELSIUS, whole number otherwise.
(76 ,       'humidity',                         'float'),                               --The target humidity the device is trying to reach.
(77 ,       'temperature',                      'float'),                               --The temperature currently set to be reached.
(78 ,       'target_temp_high',                 'float'),                               --The upper bound target temperature.
(79 ,       'target_temp_low',                  'float'),                               --The lower bound target temperature
(80 ,       'target_temp_step',                 'int'),                                 --The supported step size a target temperature can be increased or decreased
(81 ,       'temperature_unit',                 'string'),                              --The unit of temperature measurement for the system (TEMP_CELSIUS or TEMP_FAHRENHEIT).
(82 ,       'hvac_action',                      'preheating'),                          --Device is preheating.
(83 ,       'hvac_action',                      'heating'),                             --Device is heating.
(84 ,       'hvac_action',                      'cooling'),                             --Device is cooling.
(85 ,       'hvac_action',                      'drying'),                              --Device is drying.
(86 ,       'hvac_action',                      'fan'),                                 --Device has fan on.
(87 ,       'hvac_action',                      'defrosting'),                          --Device is defrosting.
(88 ,       'hvac_action',                      'off'),                                 --Device is off.
(89 ,       'hvac_action',                      'idle'),                                --Device is doing nothing.        
(90 ,       'fan_mode',                         'on'),                                  --The fan on.
(91 ,       'fan_mode',                         'off'),                                 --The fan off.
(92 ,       'fan_mode',                         'auto_high'),                           --The fan turns on automatically high.
(93 ,       'fan_mode',                         'auto_low'),                            --The fan turns on automatically low.
(94 ,       'fan_mode',                         'on_low'),                              --The fan speed is low.
(95 ,       'fan_mode',                         'on_medium'),                           --The fan speed is medium.
(96 ,       'fan_mode',                         'on_high'),                             --The fan speed is high.
(97 ,       'fan_mode',                         'middle'),                              --The fan stayes in the middle.
(98 ,       'fan_mode',                         'focus'),                               --The fan focuses in on direction.
(99 ,       'fan_mode',                         'diffuse'),                             --The fan diffuse in all possible directions.
(100,       'swing_mode',                       'off'),                                 --The fan don't swing.
(101,       'swing_mode',                       'auto'),                                --The fan swings automatically.
(102,       'swing_mode',                       '1'),                                   --The fan swings with speed 1.
(103,       'swing_mode',                       '2'),                                   --The fan swings with speed 2.
(104,       'swing_mode',                       '3'),                                   --The fan swings with speed 3.
(105,       'swing_mode',                       'vertical'),                            --The fan swings vertically.
(106,       'swing_mode',                       'horizontal'),                          --The fan swings horizontally.
(107,       'swing_mode',                       'both'),                                --The fan swings in both directions.
/* conversation 
        states(main) / attributes extracted from:
        https://www.home-assistant.io/integrations/conversation/
        https://developers.home-assistant.io/docs/core/entity/conversation
*/
(108,       'main',                             'string'),                              --Date of the last call in the converstation.
(109,       'command',                          'string'),                              --The command to trigger the event
/* cover
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/cover

*/
(110,       'main',                             'closed'),                              --The cover has reach the closed position.
(111,       'main',                             'closing'),                             --The cover is in the process of closing to reach a set position.
(112,       'main',                             'open'),                                --The cover has reached the open position.
(113,       'main',                             'opening'),                             --The cover is in the process of opening to reach a set position.
(114,       'device_class',                     'awning'),                              --The device class of the binary sensor.
(115,       'device_class',                     'blind'),                               --The device class of the binary sensor.
(116,       'device_class',                     'curtain'),                             --The device class of the binary sensor.
(117,       'device_class',                     'damper'),                              --The device class of the binary sensor.
(118,       'device_class',                     'garage'),                              --The device class of the binary sensor.
(119,       'device_class',                     'gate'),                                --The device class of the binary sensor.
(120,       'device_class',                     'shade'),                               --The device class of the binary sensor.               
(121,       'device_class',                     'sutter'),                              --The device class of the binary sensor.
/* device_tracer
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/device-tracker
        https://github.com/home-assistant/core/blob/dev/homeassistant/components/device_tracker
*/
(122,       'main',                             'home'),                                --The device is home.
(123,       'main',                             'not_home'),                            --The cover is not home.
(124,       'source_type',                      'gps'),                                 --The source of the device connection.
(125,       'source_type',                      'router'),                              --The source of the device connection.
(126,       'source_type',                      'bluetooth'),                           --The source of the device connection.
(127,       'source_type',                      'bluetooth_le'),                        --The source of the device connection.
(128,       'longitude',                        'float'),                               --The coordinates of the device.
(129,       'latitude',                         'float'),                               --The coordinates of the device.
(130,       'location_accuracy',                'string'),                              --The coordinate accuracy of the device.
(131,       'battery',                          'int'),                                 --The battery level of the device.
/* event
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/event
        https://github.com/home-assistant/core/blob/dev/homeassistant/components/event
        https://www.home-assistant.io/docs/configuration/events/
*/
(132,       'event_type',                       'pressed'),                             --The event of a button press.
(133,       'event_type',                       'call_service'),                        --The event of a service called.
(134,       'event_type',                       'component_loaded'),                    --The event of component loaded.
(135,       'event_type',                       'core_config_updated'),                 --The event of update the core config.
(136,       'event_type',                       'data_entry_flow_progressed'),          --The event of data entry flow progresses.
(137,       'event_type',                       'homeassistant_start'),                 --The event of home assistant starting.
(138,       'event_type',                       'homeassistant_started'),               --The event ofhome assistant started.
(139,       'event_type',                       'homeassistant_stop'),                  --The event home assistant stopped.
(140,       'event_type',                       'homeassistant_final_write'),           --The event home assistant makes it final write befor shutting down.
(141,       'event_type',                       'logbook_entry'),                       --The event of making a logbook entry.
(142,       'event_type',                       'service_registered'),                  --The event of register a new service.
(143,       'event_type',                       'service_removed'),                     --The event of removing a service.
(144,       'event_type',                       'state_changed'),                       --The event of state change of an entity.
(145,       'event_type',                       'themes_updated'),                      --The event of the theme change in the ui.
(146,       'event_type',                       'user_added'),                          --The event for a new user.
(147,       'event_type',                       'user_removed'),                        --The event to remove a user.
(148,       'event_type',                       'automation_reloaded'),                 --The event of reloading the automation.yaml files.
(149,       'event_type',                       'automation_triggered'),                --The event of triggering an automation.
(150,       'event_type',                       'scene_reloaded'),                      --The event of reload a scene. 
(151,       'event_type',                       'script_started'),                      --The event of the start of a script.
(152,       'event_type',                       'area_registry_updated'),               --The event of an area update.
(153,       'event_type',                       'category_registry_updated'),           --The event of a category registry update.
(154,       'event_type',                       'device_registry_updated'),             --The event of a device registry update.
(155,       'event_type',                       'entity_registry_updated'),             --The event of a entity registry update.
(156,       'event_type',                       'string'),                              --A custom event.
(157,       'event_data',                       'dict'),                                --List of additional event data
(158,       'context',                          'dict'),                                --List of additional event context
/* fan
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/fan
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/fan
*/
(159,       'percentage',                       'int'),                                 --The current speed percentage. Must be a value between 0 (off) and 100.
(160,       'percentage_step',                  'int'),                                 --The steps for the speed percentage. Must be a value between 1 and 100.
(161,       'oscillating',                      'bool'),                                --The if the fan is oscillating.
(162,       'direction',                        'forward'),                             --The fan spinns forward.
(163,       'direction',                        'reverse'),                             --The fan spinns reverse.
/* humidifier
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/humidifier
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/humidifier
*/
(164,       'action',                           'off'),                                 --The humidifier is off.
(165,       'action',                           'idle'),                                --The humidifier does nothing.
(166,       'action',                           'humidifying'),                         --The humidifier humidifying the air.
(167,       'action',                           'drying'),                              --The humidifier drying the air.
(168,       'device_class',                     'humidifier'),                          --The humidifier is a humidifier.
(169,       'device_class',                     'dehumidifier'),                        --The humidifier is a dehumidifier.
/* lawn_mower
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/lawn-mower
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/lawn_mower

*/
(170,       'main',                             'mowing'), 	                            --The lawn mower is currently mowing.
(171,       'main',                             'docked'),	                            --The lawn mower is done mowing and is currently docked.
(172,       'main',                             'paused'),	                            --The lawn mower was active and is now paused.
(173,       'main',                             'error'),                               --The lawn mower encountered an error while active and needs assistance.
/* light
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/light
        https://github.com/home-assistant/core/blob/dev/homeassistant/components/light
*/
(174,       'effect',                           'rainbow'),                             --The light makes a rainbow effect.
(175,       'effect',                           'none'),                                --The light makes no effect.
(176,       'min_color_temp_kelvin',            'int'),                                 --The minimal color value.
(177,       'max_color_temp_kelvin',            'int'),                                 --The maximal color value.
(178,       'color_mode',                       'color_temp'),                          --The ui color setting.
(179,       'color_mode',                       'hs'),                                  --The ui color setting.
(180,       'brightness',                       'int'),                                 --The brightness of the light.
(181,       'color_temp_kelvin',                'int'),                                 --The color of the light as kelvin number.
(182,       'hs_color',                         'tuple[float, float]'),                 --The color of the light in hs-format.
(183,       'rgb_color',                        'tuple[int, int, int]'),                --The color of the light in rgb-format.
(184,       'xy_color',                         'tuple[float, float]'),                 --The color of the light in xy-format.
(185,       'rgbw_color',                       'tuple[int, int, int, int]'),           --The color of the light in rgbw-format.
(186,       'rgbww_color',                      'tuple[int, int, int, int, int]'),      --The color of the light in rgbww-format.
/* lock
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/lock
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/lock
*/
(187,       'main',                             'jammed'),                              --The lock is unabled to toggle.
(188,       'main',                             'locked'),                              --The lock is locked.
(189,       'main',                             'locking'),                             --The lock is looking.
(190,       'main',                             'unlocked'),                            --The lock is unlocked.
(191,       'main',                             'unlocking'),                           --The lock is unlooking.
/* media_player
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/media-player
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/media_player
*/
(192,       'main',                             'playing'),                             --The media player playimg something.
(193,       'main',                             'standby'),                             --The media player is in standby mode.
(194,       'main',                             'buffering'),                           --The media player buffering something.
(195,       'volume_level',                     'float'),                               --The volume level of the media player in the range (0..1).
(196,       'is_volume_muted',                  'bool'),                                --Its true if volume is currently muted.
(197,       'volume_step',                      'float'),                               --The volume step to use for the volume_up and volume_down services.
(198,       'media_content_id',                 'string'),                              --The content ID of current playing media.
(199,       'media_content_type',               'album'),                               --The content type of current playing media.
(200,       'media_content_type',               'app'),                                 --The content type of current playing media.
(201,       'media_content_type',               'artist'),                              --The content type of current playing media.
(202,       'media_content_type',               'channel'),                             --The content type of current playing media.
(203,       'media_content_type',               'channels'),                            --The content type of current playing media.
(204,       'media_content_type',               'composer'),                            --The content type of current playing media.
(205,       'media_content_type',               'contibuting_artist'),                  --The content type of current playing media.
(206,       'media_content_type',               'episode'),                             --The content type of current playing media.
(207,       'media_content_type',               'game'),                                --The content type of current playing media.
(208,       'media_content_type',               'genre'),                               --The content type of current playing media.
(209,       'media_content_type',               'image'),                               --The content type of current playing media.
(210,       'media_content_type',               'movie'),                               --The content type of current playing media.
(211,       'media_content_type',               'music'),                               --The content type of current playing media.
(212,       'media_content_type',               'playlist'),                            --The content type of current playing media.
(213,       'media_content_type',               'podcast'),                             --The content type of current playing media.
(214,       'media_content_type',               'season'),                              --The content type of current playing media.
(215,       'media_content_type',               'track'),                               --The content type of current playing media.
(216,       'media_content_type',               'tvshow'),                              --The content type of current playing media.
(217,       'media_content_type',               'url'),                                 --The content type of current playing media.
(218,       'media_content_type',               'video'),                               --The content type of current playing media.
(219,       'app_name',                         'string'),                              --The name of the current running app.
(220,       'group_members',                    'list[string]'),                        --A dynamic list of player entities which are currently grouped together for synchronous playback.
(221,       'media_album_artist',               'string'),                              --The album artist of current playing media, music track only.
(222,       'media_album_name',                 'string'),                              --The album name of current playing media, music track only.
(223,       'media_artist',                     'string'),                              --The artist of current playing media, music track only.
(224,       'media_channel',                    'string'),                              --The channel currently playing.
(225,       'media_duration',                   'int'),                                 --The duration of current playing media in seconds.
(226,       'media_episode',                    'string'),                              --The episode of current playing media, TV show only.
(227,       'media_playlist',                   'string'),                              --The duration of current playing media in seconds.
(228,       'media_position',                   'int'),                                 --The episode of current playing media, TV show only
(229,       'media_season',                     'string'),                              --The duration of current playing media in seconds.
(230,       'media_series_title',               'string'),                              --The episode of current playing media, TV show only
(231,       'media_title',                      'string'),                              --The duration of current playing media in seconds.
(232,       'media_track',                      'int'),                                 --The track number of current playing media, music track only.
(233,       'repeat',                           'off'),                                 --The current repeat mode.
(234,       'repeat',                           'one'),                                 --The current repeat mode.
(235,       'repeat',                           'all'),                                 --The current repeat mode.
(236,       'shuffle',                          'bool'),                                --True if shuffle is enabled.
(237,       'source',                           'dvd'),                                 --The currently selected input source for the media player.
(238,       'source',                           'youtube'),                             --The currently selected input source for the media player.
(239,       'sound_mode',                       'music'),                               --The current sound mode of the media player.
(240,       'sound_mode',                       'movie'),                               --The current sound mode of the media player.
(241,       'device_class',                     'tv'),                                  --The media player is a tv.
(242,       'device_class',                     'speaker'),                             --The media player is a speaker.
(243,       'device_class',                     'receiver'),                            --The media player is a receiver.
/* number
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/number
*/
(244,       'main',                             'float'),                               --The number of the entity.
(245,       'min',                              'float'),                               --The minimum accepted value in the number's (inclusive).
(246,       'max',                              'float'),                               --The maximum accepted value in the number's (inclusive).
(247,       'step',                             'float'),                               --Defines the resolution of the values, i.e. the smallest increment or decrement in the number's.
(248,       'mode',                             'string'),                              --Defines how the number should be displayed in the UI. Can be box, slider or auto.
/* remote
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/remote
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/remote
*/
(249,       'activity',                         'string'),                              --The minimum accepted value in the number's (inclusive).
(250,       'current_activity',                 'string'),                              --The maximum accepted value in the number's (inclusive).
/* scene
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/scene
        https://github.com/home-assistant/core/blob/dev/homeassistant/components/scene/__init__.py
*/
(251,       'id',                               'string'),                              --The id of the scene.
(252,       'entity_id',                        'string'),                              --The id of the entity in the scene.
/* select
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/select
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/select
*/
(253,       'main', 	                        'option'),                              --The one of the options of the select.
(254,       'options',                          'list[string]'),                        --All options of the select.
/* sensor_float
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/sensor
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/sensor
*/
(255,       'device_class',                     'apparent_power'),                      --The device class of the sensor.
(256,       'device_class',                     'aqi'),                                 --The device class of the sensor.
(257,       'device_class',                     'atmospheric_pressure'),                --The device class of the sensor.
(258,       'device_class',                     'conductivity'),                        --The device class of the sensor.
(259,       'device_class',                     'carbon_dioxide'),                      --The device class of the sensor.
(260,       'device_class',                     'carbon_monoxide'),                     --The device class of the sensor.
(261,       'device_class',                     'current'),                             --The device class of the sensor.
(262,       'device_class',                     'data_rate'),                           --The device class of the sensor.
(263,       'device_class',                     'data_size'),                           --The device class of the sensor.
(264,       'device_class',                     'distance'),                            --The device class of the sensor.
(265,       'device_class',                     'duration'),                            --The device class of the sensor.
(266,       'device_class',                     'energy'),                              --The device class of the sensor.
(267,       'device_class',                     'energy_storage'),                      --The device class of the sensor.
(268,       'device_class',                     'frequency'),                           --The device class of the sensor.
(269,       'device_class',                     'humidity'),                            --The device class of the sensor.
(270,       'device_class',                     'illuminance'),                         --The device class of the sensor.
(271,       'device_class',                     'irradiance'),                          --The device class of the sensor.
(272,       'device_class',                     'monetary'),                            --The device class of the sensor.
(273,       'device_class',                     'nitrogen_dioxide'),                    --The device class of the sensor.
(274,       'device_class',                     'nitrogen_monoxide'),                   --The device class of the sensor.
(275,       'device_class',                     'nitrous_oxide'),                       --The device class of the sensor.
(276,       'device_class',                     'ozone'),                               --The device class of the sensor.
(277,       'device_class',                     'ph'),                                  --The device class of the sensor.
(278,       'device_class',                     'pm1'),                                 --The device class of the sensor.
(279,       'device_class',                     'pm10'),                                --The device class of the sensor.
(280,       'device_class',                     'pm25'),                                --The device class of the sensor.
(281,       'device_class',                     'power_factor'),                        --The device class of the sensor.
(282,       'device_class',                     'precipitation'),                       --The device class of the sensor.
(283,       'device_class',                     'precipitation_intensity'),             --The device class of the sensor.
(284,       'device_class',                     'pressure'),                            --The device class of the sensor.
(285,       'device_class',                     'reactive_power'),                      --The device class of the sensor.
(286,       'device_class',                     'signal_strength'),                     --The device class of the sensor.
(287,       'device_class',                     'sound_pressure'),                      --The device class of the sensor.
(288,       'device_class',                     'speed'),                               --The device class of the sensor.
(289,       'device_class',                     'sulphur_dioxide'),                     --The device class of the sensor.
(290,       'device_class',                     'temperature'),                         --The device class of the sensor.
(291,       'device_class',                     'volatile_organic_compounds'),          --The device class of the sensor.
(292,       'device_class',                     'volatile_organic_compounds_parts'),    --The device class of the sensor.
(293,       'device_class',                     'voltage'),                             --The device class of the sensor.
(294,       'device_class',                     'volume'),                              --The device class of the sensor.
(295,       'device_class',                     'volume_storage'),                      --The device class of the sensor.
(296,       'device_class',                     'volume_flow_rate'),                    --The device class of the sensor.
(297,       'device_class',                     'water'),                               --The device class of the sensor.
(298,       'device_class',                     'weight'),                              --The device class of the sensor.
(299,       'device_class',                     'wind_speed'),                          --The device class of the sensor.
(300,       'unit_of_measurement',              'string'),                              --The unit of the sensor value.
(301,       'battery_level',                    'int'),                                 --The battery level of the sensor.
/* sensor_string
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/sensor
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/sensor
*/
(302,       'device_class',                     'date'),                                --The device class of the sensor.
(303,       'device_class',                     'timestamp'),                           --The device class of the sensor.
/* siren
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/siren
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/siren
*/
(304,       'available_tones',                  'list[string]'),                        --The list of possible sounds for the siren.
/* switch
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/switch
*/
(305,       'device_class',                     'switch'),                              --The device class of the switch.
(306,       'device_class',                     'outlet'),                              --The device class of the switch.
/* text
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/text
*/
(307,       'mode',                             'text'),                                --The text ui mode.
(308,       'mode',                             'password'),                            --The text ui mode.
(309,       'pattern',                          'string'),                              --A regex pattern that the text value must match to be valid.
/* todo
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/todo
*/
(310,       'main',                             'int'),                                 --A TodoListEntity state is the count of incomplete items in the To-do list.
/* update
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/update
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/update
*/
(311,       'auto_update',                      'bool'),                                --The device or service that the entity represents has auto update logic. When this is set to True you can not skip updates.
(312,       'installed_version',                'string'),                              --The currently installed and used version of the software.
(313,       'in_progress',                      'int'),                                 --Update installation progress. Can either return a boolean (1 if in progress, 0 if not) or an int to indicate the progress from 0 to 100%.
(314,       'release_summary',                  'string'),                              --Summary of the release notes or changelog.
(315,       'release_url',                      'string'),                              --URL to the full release notes of the latest version available.
(316,       'current_version',                  'string'),                              --The current version of the update.
(317,       'skipped_version',                  'string'),                              --The version that was skipped.
(318,       'title',                            'string'),                              --Title of the software.
(319,       'latest_version',                   'string'),                              --The latest version of the software available.
(320,       'device_class',                     'firmware'),                            --The device class of the update.
/* vacuum
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/vacuum
*/
(321,       'main',                             'cleaning'),                            --The vacuum is cleaning.
(322,       'main',                             'returning'),                           --The vacuum is returning to the dock.
(323,       'battery_icon',                     'string'),                              --The time the vacuum has been cleaning.
(324,       'cleaned_area',                     'float'),                               --The percentage of the area that has been cleaned.
(325,       'fan_speed',                        'min'),                                 --The speed of the vacuum fan.
(326,       'fan_speed',                        'medium'),                              --The speed of the vacuum fan.
(327,       'fan_speed',                        'high'),                                --The speed of the vacuum fan.
(328,       'fan_speed',                        'max'),                                 --The speed of the vacuum fan.
/* valve
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/valve
        https://www.home-assistant.io/integrations/valve/
*/
(329,       'current_position',                 'int'),                                 --The current position of the valve.
/* water_heater
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/water-heater
        https://github.com/home-assistant/core/blob/master/homeassistant/components/water_heater/__init__.py
*/
(330,       'main',                             'eco'),                                 --The water heater is in eco mode.
(331,       'main',                             'electric'),                            --The water heater is in electric mode.
(332,       'main',                             'performance'),                         --The water heater is in high performance mode.
(333,       'main',                             'high_demand'),                         --The water heater is in high performance mode.
(334,       'main',                             'heat_pump'),                           --The water heater is in heat pump mode.
(335,       'main',                             'gas'),                                 --The water heater is in gas mode.
(336,       'operation_mode',                   'eco'),                                 --The operation mode of the water heater.
(337,       'operation_mode',                   'electric'),                            --The operation mode of the water heater.
(338,       'operation_mode',                   'performance'),                         --The operation mode of the water heater.
(339,       'operation_mode',                   'high_demand'),                         --The operation mode of the water heater.
(340,       'operation_mode',                   'heat_pump'),                           --The operation mode of the water heater.
(341,       'operation_mode',                   'gas'),                                 --The operation mode of the water heater.
(342,       'operation_mode',                   'off'),                                 --The operation mode of the water heater.
(343,       'away_mode',                        'on'),                                  --The away mode of the water heater.
(344,       'away_mode',                        'off'),                                 --The away mode of the water heater.
/* weather
        states(main) / attributes extracted from:
        https://developers.home-assistant.io/docs/core/entity/weather
        https://github.com/home-assistant/core/blob/master/homeassistant/components/water_heater/__init__.py
*/
(345,       'main',                             'clear-night'),                         --The weather is clear at night.
(346,       'main',                             'cloudy'),                              --The weather is cloudy.
(347,       'main',                             'exceptional'),                         --The weather is exceptional.
(348,       'main',                             'fog'),                                 --The weather is foggy.
(349,       'main',                             'hail'),                                --The weather is hailing.
(350,       'main',                             'lightning'),                           --The weather is lightning.
(351,       'main',                             'lightning-rainy'),                     --The weather is lightning and rainy.
(352,       'main',                             'partlycloudy'),                        --The weather is partly cloudy.
(353,       'main',                             'pouring'),                             --The weather is pouring.
(354,       'main',                             'rainy'),                               --The weather is rainy.
(355,       'main',                             'snowy'),                               --The weather is snowy.
(356,       'main',                             'snowy-rainy'),                         --The weather is snowy and rainy.
(357,       'main',                             'sunny'),                               --The weather is sunny.
(358,       'main',                             'windy'),                               --The weather is windy.
(359,       'main',                             'windy-variant'),                       --The weather is windy and variant.
(360,       'attribution',                      'string'),                              --The attributor of the weather.
(361,       'apparent_temperature',             'float'),                               --The current apparent (feels-like) temperature in °C or °F.
(362,       'pressure',                         'flaot'),                               --The pressure of the weather.
(363,       'pressure_unit',                    'string'),                              --The pressure unit of the weather.
(364,       'wind_speed',                       'float'),                               --The wind bearing of the weather.
(365,       'wind_speed_unit',                  'string'),                              --The wind speed unit of the weather.
(366,       'wind_bearing',                     'string'),                              --The current wind bearing in azimuth angle (degrees) or 1-3 letter cardinal direction.
(367,       'wind_gust_speed',                  'float'),                               --The current wind gust speed.
(368,       'visibility',                       'float'),                               --The visibility of the weather.
(369,       'visibility_unit',                  'string'),                              --The visibility unit of the weather.
(370,       'cloud_coverage',                   'int'),                                 --The cloud coverage of the weather.
(371,       'dew_point',                        'float'),                               --The dew point temperature in °C or °F.
(372,       'ozone',                            'float'),                               --The current ozone level of the weather.
(373,       'uv_index',                         'float'),                               --The uv index of the weather.
(374,       'precipitation_unit',               'string'),                              --The precipitation unit in mm or in.
/* homeassistant
        attributes extracted from trigger: automation_dissection.py
*/
(375,       'event',                            'start'),                               --Home assistant is starting.
(376,       'event',                            'shutdown'),                            --Home assistant is shutting down.
/* mqtt
        attributes extracted from: automation_dissection.py
*/
(377,       'payload',                          'string'),                              --The payload of the message.
(378,       'qos',                              '0'),                                   --The quality of service of the message.
(379,       'qos',                              '1'),                                   --The quality of service of the message.
(380,       'qos',                              '2'),                                   --The quality of service of the message.
/* sun
        states(main) / attributes extracted from:
        https://www.home-assistant.io/integrations/sun/
*/
(381,       'main',                             'above_horizon'),                       --The sun is above the horizon.
(382,       'main',                             'below_horizon'),                       --The sun is below the horizon.
(383,       'azimuth',                          'float'),                               --The azimuth of the sun.
(384,       'elevation',                        'float'),                               --The elevation of the sun.
(385,       'next_dawn',                        'string'),                              --The next dawn time.
(386,       'next_dusk',                        'string'),                              --The next dusk time.
(387,       'next_midnight',                    'string'),                              --The next midnight time.
(388,       'next_noon',                        'string'),                              --The next noon time.
(389,       'next_rising',                      'string'),                              --The next rising time.
(390,       'next_setting',                     'string'),                              --The next setting time.
(391,       'rising',                           'bool'),                                --The sun is rising.
(392,       'event',                            'sunrise'),                             --The event trigger for sunrises.
(393,       'event',                            'sunset'),                              --The event trigger for sunsets.
/* tag  
        states(main) / attributes extracted from:
        https://www.home-assistant.io/integrations/tag/
*/
(394,       'device_id',                        'string'),                              --The id of the device that scanned the tag.
(395,       'tag_id',                           'string'),                              --The id of the tag.
/* persistent_notification
        states(main) / attributes extracted from:
        https://www.home-assistant.io/integrations/persistent_notification/
*/
(396,       'update_type',                      'added'),                               -- The message of the notification.
(397,       'update_type',                      'updated'),                             -- The message of the notification.
(398,       'update_type',                      'removed'),                             -- The message of the notification.
(399,       'update_type',                      'current'),                             -- The message of the notification.
(400,       'notification_id',                  'string'),                              -- The id of the notification.
/* webhook
        states(main) / attributes extracted from:
        https://www.home-assistant.io/docs/automation/trigger/#webhook-trigger
*/
(401,       'allowed_method',                   'POST'),                                -- The allowed method for the web.
(402,       'allowed_method',                   'PUT'),                                 -- The allowed method for the web.
(403,       'allowed_method',                   'HEAD'),                                -- The allowed method for the web.
(404,       'allowed_method',                   'GET'),                                 -- The allowed method for the web.
(405,       'local_only',                       'bool'),                                -- The webhook is local only.
/* zone
        states(main) / attributes extracted from:
        https://www.home-assistant.io/integrations/zone/
*/
(406,       'radius',                           'int'),                                 -- The radius of the zone.
(407,       'passive',                          'bool'),                                -- The zone is passive.
(408,       'persons',                          'list[string]'),                        -- The persons in the zone.
/* device_automation
        states(main) / attributes extracted from:
        https://github.com/home-assistant/core/tree/dev/homeassistant/components/device_automation
*/                                
(409,       'domain',                           'string'),                              -- enitity domain.
(410,       'type',                             'turned_on'),                           -- type of trigger.
(411,       'type',                             'turned_off'),                          -- type of trigger .
(412,       'type',                             'is_on'),                               -- type of condition.
(413,       'type',                             'is_off'),                              -- type of condition.
(414,       'type',                             'turn_on'),                             -- type of action.
(415,       'type',                             'turn_off'),                            -- type of action.
(416,       'type',                             'toggle'),                              -- type of action.
/* datetime additions
        attributes extracted from: 
        https://www.home-assistant.io/docs/scripts/conditions/#time-condition
*/
(417,       'weekday',                          'mon'),                                 -- If the day is monday
(418,       'weekday',                          'tue'),                                 -- If the day is tuesday
(419,       'weekday',                          'wed'),                                 -- If the day is wednesday
(420,       'weekday',                          'thu'),                                 -- If the day is thursday
(421,       'weekday',                          'fri'),                                 -- If the day is friday
(422,       'weekday',                          'sat'),                                 -- If the day is saturday
(423,       'weekday',                          'sun'),                                 -- If the day is sunday
/* automation
        states(main) extracted from:
        https://www.home-assistant.io/docs/automation/services/
*/
(424,       'last_triggered',                   'datetime'),                            -- The last time the automation was triggered.
(425,       'mode',                             'single'),                              -- The automation won't start if repeated.
(426,       'mode',                             'restart'),                             -- The automation will restart up if repeated.
(427,       'mode',                             'queued'),                              -- The automation is queued up if repeated.
(428,       'mode',                             'parallel'),                            -- The automation is called parallel if repeated.
(429,       'current',                          'int'),                                 -- The current state (not running 0 / running 1) of the automation
/* person
        states(main) / attributes extracted from:
        https://www.home-assistant.io/integrations/person/
*/
(430,       'device_trackers',                  'list[string]'),                        -- The list of device trackers for the person.
(431,       'user_id',                          'string'),                              -- The user id of the person.
(432,       'source',                           'string'),                              -- The source of the tracking information
